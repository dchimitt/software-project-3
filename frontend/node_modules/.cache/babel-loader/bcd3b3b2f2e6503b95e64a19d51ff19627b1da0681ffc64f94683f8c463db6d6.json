{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayp9\\\\WebstormProjects\\\\student-life-webapp\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl, Card, CardActions, CardContent,\n// Added CardActions\nTypography, Grid, Snackbar, Alert, IconButton, AppBar, Toolbar, Switch, Collapse, Dialog, DialogTitle, DialogContent, DialogActions, Fab, List, ListItem, ListItemText, ListItemSecondaryAction, Divider } from '@mui/material';\nimport { DirectionsCar, EventAvailable, AddCircle, Map, Brightness4, Brightness7 } from '@mui/icons-material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // --- State Variables ---\n  const [events, setEvents] = useState([]);\n  const [selectedEventId, setSelectedEventId] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [mapUrl, setMapUrl] = useState('');\n  const [parkingSuggestion, setParkingSuggestion] = useState(''); // <-- Parking Suggestion State\n  const [destination, setDestination] = useState('Purdue University Northwest');\n  const [registeredEvents, setRegisteredEvents] = useState([]);\n  const [selectedRegisteredEvent, setSelectedRegisteredEvent] = useState('');\n  const [searchStudentID, setSearchStudentID] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  // Removed filteredEvents definition from here, moved below functions\n\n  const [showAddDialog, setShowAddDialog] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n  const [showDetailsDialog, setShowDetailsDialog] = useState(false); // <-- ADDED state for Details modal\n  const [showRegisterDialog, setShowRegisterDialog] = useState(false); // <-- ADDED state for Register modal\n\n  const [studentInfo, setStudentInfo] = useState({\n    firstName: '',\n    middleName: '',\n    lastName: '',\n    studentID: ''\n  });\n  const [newEvent, setNewEvent] = useState({\n    event_name: '',\n    abstract: '',\n    event_date: '',\n    location: '',\n    cost: '',\n    time_from: '',\n    time_to: ''\n  });\n\n  // --- REVISED Parking Data and Helper Function ---\n  const parkingMappings = {\n    // --- ADD PARKING LOTS AS LOCATIONS ---\n    'parking lot 1': 'Event is in Lot 1. Nearby options: Parking Garage, Lot 5.',\n    'parking lot 2': 'Event is in Lot 2. Nearby options: Parking Garage, Lot 8, Lot 9.',\n    'parking lot 3': 'Event is in Lot 3. Nearby options: Lot 1, Lot 5, Parking Garage.',\n    'parking lot 4': 'Event is in Lot 4 (West side). Nearby options: Lot 5.',\n    // Small lot\n    'parking lot 5': 'Event is in Lot 5. Nearby options: Lot 1, Lot 3, Parking Garage.',\n    'parking lot 6': 'Event is in Lot 6. Nearby options: Parking Garage, Lot 7.',\n    // User's case\n    'parking lot 7': 'Event is in Lot 7. Nearby options: Lot 6, Lot 16 (near Schneider).',\n    'parking lot 8': 'Event is in Lot 8. Nearby options: Parking Garage, Lot 2, Lot 9.',\n    'parking lot 9': 'Event is in Lot 9. Nearby options: Parking Garage, Lot 2, Lot 8.',\n    'parking lot 10': 'Event is in Lot 10. Nearby options: Lot 11, Parking Garage.',\n    'parking lot 11': 'Event is in Lot 11. Nearby options: Lot 10, Parking Garage.',\n    'parking lot 12': 'Event is in Lot 12 (South Campus). Nearby options: Lot 13, Lot 14.',\n    'parking lot 13': 'Event is in Lot 13 (Main South Lot). Nearby options: Lot 12, Lot 14.',\n    'parking lot 14': 'Event is in Lot 14 (South Campus). Nearby options: Lot 13, Lot 12.',\n    'parking lot 15': 'Event is in Lot 15 (Southwest). Nearby options: Lot 12, Lot 14.',\n    'parking lot 16': 'Event is in Lot 16 (Northeast). Nearby options: Lot 7.',\n    'parking garage': 'Event is in the Parking Garage. Check for specific levels/areas.',\n    // Garage itself\n\n    // Hammond Campus - Based on Hammond-Map-Lage.png\n    'anderson': 'Parking Garage, Lot 1, Lot 5',\n    // West side, North\n    'classroom office': 'Parking Garage, Lot 1, Lot 5',\n    // West side, North\n    'cob': 'Parking Garage, Lot 1, Lot 5',\n    // West side, North\n    'potter': 'Parking Garage, Lot 1, Lot 5',\n    // West side, North-Mid\n    'powers': 'Parking Garage, Lot 1, Lot 3, Lot 5',\n    // West side, Mid\n    'gyte': 'Parking Garage, Lot 1, Lot 3, Lot 5',\n    // West side, Mid-South\n    'lawshe': 'Parking Garage, Lot 10, Lot 11',\n    // Southwest academic area\n    'student union': 'Parking Garage, Lot 2, Lot 8, Lot 9',\n    // Central academic area\n    'library': 'Parking Garage, Lot 2, Lot 8, Lot 9',\n    // Central academic area\n    'sulb': 'Parking Garage, Lot 2, Lot 8, Lot 9',\n    // Central academic area\n    'nils k nelson': 'Parking Garage, Lot 8, Lot 9',\n    // South of SULB\n    'bioscience': 'Parking Garage, Lot 8, Lot 9',\n    // South of SULB\n    'porter': 'Parking Garage, Lot 2',\n    // East of SULB\n    'design studio': 'Parking Garage, Lot 1',\n    // North area, near 169th\n    'university services': 'Parking Garage, Lot 1',\n    // North area, near 169th\n    'schneider': 'Lot 16, Lot 7',\n    // Northeast corner\n    'police': 'Lot 16, Lot 7 (Near Schneider Ave Bldg)',\n    // Assumed near Schneider\n    'fitness': 'Lot 13, Lot 14, Lot 12 (South of 173rd)',\n    // South Campus\n    'recreation': 'Lot 13, Lot 14, Lot 12 (South of 173rd)',\n    // South Campus\n    'peregrine': 'Lot 13 (Main South Lot)',\n    // University Village Housing\n    'griffin': 'Lot 13 (Main South Lot)',\n    // University Village Housing\n    'university village': 'Lot 13 (Main South Lot)',\n    // University Village Housing\n    'counseling': 'Lot 15',\n    // Southwest area\n    'healthy living': 'Lot 15',\n    // Southwest area\n    'white lodging': 'Lot 14, Lot 13',\n    // Southwest area\n    'hospitality': 'Lot 14, Lot 13',\n    // Keyword for White Lodging\n    'challenger': 'Lot 14, Lot 13',\n    // Keyword for White Lodging location\n\n    // Off-map buildings mentioned previously - keep general suggestions from search results\n    'dowling park': 'Dowling Park Athletics Complex Parking',\n    'athletics': 'Dowling Park Athletics Complex Parking',\n    'roberts center': 'Parking near Roberts Center (7040 Indianapolis Blvd)',\n    'cmec': 'Parking near CMEC (7150 Indianapolis Blvd)',\n    // Hammond General Catch-all - Garage is central, but check map link too\n    'hammond': 'Parking Garage or check map for lot near specific building',\n    // --- Westville Campus Keywords -> Suggestions (Keep previous or refine if Westville map provided) ---\n    'schwarz': 'Lots North or East of Schwarz Hall (Check Westville map)',\n    'technology': 'Lots East of Technology Building (Check Westville map)',\n    'tech building': 'Lots East of Technology Building (Check Westville map)',\n    'library student faculty': 'Lots North of LSF (Check Westville map)',\n    'lsf': 'Lots North of LSF (Check Westville map)',\n    'dworkin': 'Lots East or South of DSAC (Check Westville map)',\n    'dsac': 'Lots East or South of DSAC (Check Westville map)',\n    'student services': 'Lots East or South of DSAC (Check Westville map)',\n    'westville': 'Check Westville campus map for lots near specific building',\n    // Default if no match\n    'default': 'Please check official PNW Campus Maps for specific parking.'\n  };\n\n  // The getParkingSuggestion function remains the same as before\n  const getParkingSuggestion = locationString => {\n    if (!locationString) {\n      return parkingMappings['default'];\n    }\n    const lowerLocation = locationString.toLowerCase();\n    const specificKeys = Object.keys(parkingMappings).filter(k => k !== 'hammond' && k !== 'westville' && k !== 'default');\n    for (const key of specificKeys) {\n      if (lowerLocation.includes(key)) {\n        return parkingMappings[key];\n      }\n    }\n    if (lowerLocation.includes('hammond')) {\n      return parkingMappings['hammond'];\n    }\n    if (lowerLocation.includes('westville')) {\n      return parkingMappings['westville'];\n    }\n    return parkingMappings['default'];\n  };\n  // --- End REVISED Parking Data and Function ---\n\n  // --- Effects ---\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  // --- ADDED: useEffect for debounced fetching of registered events ---\n  useEffect(() => {\n    // Don't fetch if ID is empty or too short (optional, adjust min length if needed)\n    if (!searchStudentID || searchStudentID.trim().length < 3) {\n      setRegisteredEvents([]); // Clear previous results if ID becomes too short\n      return;\n    }\n\n    // Set a timer to fetch events after a short delay\n    const debounceTimer = setTimeout(() => {\n      fetchRegisteredEvents();\n    }, 750); // Adjust delay as needed (750ms)\n\n    // Cleanup function: Clear the timer if the user types again before delay finishes\n    return () => {\n      clearTimeout(debounceTimer);\n    };\n  }, [searchStudentID]); // Dependency array: Re-run effect only when searchStudentID changes\n  // Note: If fetchRegisteredEvents used other state/props, it might need to be included or memoized\n\n  // --- Data Fetching ---\n  const fetchEvents = () => {\n    axios.get('http://localhost:5000/events').then(response => setEvents(response.data)).catch(error => console.error('Error fetching events', error));\n  };\n\n  // MODIFIED fetchRegisteredEvents for automatic loading\n  const fetchRegisteredEvents = () => {\n    // This function now gets called by the useEffect, but the check inside is still important\n    if (!searchStudentID) {\n      // This check might be redundant now due to useEffect check, but harmless\n      // setSnackbar({ open: true, message: 'Please enter your Student ID first.', severity: 'warning' });\n      return;\n    }\n\n    // Add a loading indicator maybe?\n    setSnackbar({\n      open: true,\n      message: `Loading events for ${searchStudentID}...`,\n      severity: 'info',\n      autoHideDuration: 1500\n    });\n    axios.get(`http://localhost:5000/my-registrations/${searchStudentID}`).then(response => {\n      setRegisteredEvents(response.data);\n      if (response.data.length === 0) {\n        setSnackbar({\n          open: true,\n          message: 'No registered events found for this ID.',\n          severity: 'info'\n        });\n      }\n      // Don't automatically select an event anymore\n      // if (response.data.length > 0) {\n      //     setSelectedRegisteredEvent(response.data[0].id.toString());\n      // }\n    }).catch(error => {\n      console.error('Error fetching registered events', error);\n      setRegisteredEvents([]); // Clear results on error\n      setSnackbar({\n        open: true,\n        message: 'Could not fetch registered events.',\n        severity: 'error'\n      });\n    });\n  };\n\n  // --- Event Handlers ---\n  const handleRegister = () => {\n    // MODIFIED for Dialog\n    if (!selectedEventId || !studentInfo.studentID || !studentInfo.firstName || !studentInfo.lastName) {\n      setSnackbar({\n        open: true,\n        message: 'Please select an event and fill in required student information (First Name, Last Name, Student ID).',\n        severity: 'warning'\n      });\n      return;\n    }\n    axios.post('http://localhost:5000/register', {\n      ...studentInfo,\n      eventID: selectedEventId\n    }).then(response => {\n      setSnackbar({\n        open: true,\n        message: response.data.message || 'Registration successful!',\n        severity: 'success'\n      });\n      // Clear form and close registration section\n      setShowRegisterDialog(false); // <-- Close the register modal\n      setStudentInfo({\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        studentID: ''\n      });\n      // Clear selected event info related to registration\n      setSelectedEventId('');\n      // Optionally keep selectedEvent for potential other uses, or clear it too if desired\n      // setSelectedEvent(null);\n      setParkingSuggestion(''); // Clear suggestion\n    }).catch(error => {\n      var _error$response, _error$response$data;\n      console.error('Error registering student', error);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed. Please try again.';\n      setSnackbar({\n        open: true,\n        message: message,\n        severity: 'error'\n      });\n    });\n  };\n  const handleAddEvent = () => {\n    // Basic validation for new event\n    if (!newEvent.event_name || !newEvent.event_date || !newEvent.location || !newEvent.time_from || !newEvent.time_to) {\n      setSnackbar({\n        open: true,\n        message: 'Please fill in all required event fields (Name, Date, Location, Times).',\n        severity: 'warning'\n      });\n      return;\n    }\n    axios.post('http://localhost:5000/add-event', newEvent).then(response => {\n      setSnackbar({\n        open: true,\n        message: response.data.message || 'Event added successfully!',\n        severity: 'success'\n      });\n      setNewEvent({\n        event_name: '',\n        abstract: '',\n        event_date: '',\n        location: '',\n        cost: '',\n        time_from: '',\n        time_to: ''\n      }); // Clear form\n      setShowAddDialog(false); // Close dialog\n      fetchEvents(); // Refresh event list\n    }).catch(error => {\n      var _error$response2, _error$response2$data;\n      console.error('Error adding event', error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Adding event failed. Please try again.';\n      setSnackbar({\n        open: true,\n        message: message,\n        severity: 'error'\n      });\n    });\n  };\n\n  // Handles the SELECT dropdown inside the old registration form - NO LONGER USED directly for triggering parking suggestions\n  const handleEventSelect = e => {\n    const selectedId = e.target.value;\n    setSelectedEventId(selectedId);\n    const event = events.find(ev => ev.id.toString() === selectedId);\n    setSelectedEvent(event); // Update the selected event context if needed\n\n    // Parking suggestion is now handled by button clicks opening modals\n    if (event) {\n      setDestination(event.location || 'Purdue University Northwest');\n      // setParkingSuggestion(getParkingSuggestion(event.location)); // REMOVED - handled by modal triggers\n    } else {\n      setParkingSuggestion('');\n    }\n  };\n  const handleGetDirections = eventLocation => {\n    const dest = eventLocation || 'Purdue University Northwest, Hammond, IN'; // Default destination\n\n    if (!navigator.geolocation) {\n      setSnackbar({\n        open: true,\n        message: 'Geolocation is not supported by your browser.',\n        severity: 'warning'\n      });\n      return;\n    }\n    setSnackbar({\n      open: true,\n      message: 'Getting your location...',\n      severity: 'info',\n      autoHideDuration: 2000\n    });\n    // Ensure map is hidden initially while loading new one - Not hiding the main page one now\n    // setShowMap(false); // We don't control the main page map anymore\n    setMapUrl(''); // Clear previous URL\n\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const origin = `${latitude},${longitude}`;\n\n      // --- Use Google Maps Embed API for iframe ---\n      // ** Replace YOUR_API_KEY with your actual Google Maps API Key **\n      const apiKey = 'AIzaSyAx7-WecbbIOx8S7vCgaz64xB2yWfvpzgw'; // <-- User Provided Key\n      console.log(\"Checking API Key. Value is:\", apiKey);\n      // Add a more robust check, ensure it's not placeholder or empty\n      if (!apiKey || apiKey === 'YOUR_API_KEY' || apiKey.trim() === '') {\n        setSnackbar({\n          open: true,\n          message: 'API Key missing or invalid for embedded map.',\n          severity: 'error'\n        });\n        console.error(\"API Key for Google Maps Embed API is missing or invalid!\");\n        return; // Stop if no valid API key\n      }\n\n      // Construct the Embed API URL for directions\n      const embedUrl = `https://www.google.com/maps/dir/?api=1&origin=$1{apiKey}&origin=${origin}&destination=${encodeURIComponent(dest)}&mode=driving`; // Added mode=driving\n\n      setMapUrl(embedUrl); // Set the URL for the iframe\n      setShowMap(true); // Set state to show the Collapse containing the iframe (now inside the modal)\n      setSnackbar({\n        open: true,\n        message: 'Directions loading...',\n        severity: 'info',\n        autoHideDuration: 1500\n      }); // Info while loading map\n      // --- End Embed API Logic ---\n    }, error => {\n      console.error('Error getting location:', error);\n      let message = 'Unable to retrieve your location. Please ensure location services are enabled.';\n      if (error.code === 1) {\n        // PERMISSION_DENIED\n        message = 'Location permission denied. Please enable it in your browser settings.';\n      }\n      setSnackbar({\n        open: true,\n        message: message,\n        severity: 'error'\n      });\n      setShowMap(false); // Keep map hidden on error\n      setMapUrl('');\n    });\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Date TBD';\n    try {\n      // Adding timeZone option to help consistency\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        timeZone: 'UTC'\n      });\n    } catch (e) {\n      console.error(\"Error formatting date:\", dateString, e);\n      return \"Invalid Date\";\n    }\n  };\n  const formatTime = timeString => {\n    if (!timeString) return '';\n    try {\n      // Attempt to parse time, assuming HH:MM or HH:MM:SS format\n      const [hours, minutes] = timeString.split(':');\n      const date = new Date();\n      date.setHours(parseInt(hours, 10), parseInt(minutes || 0, 10), 0);\n      return date.toLocaleTimeString([], {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      });\n    } catch (e) {\n      console.error(\"Error formatting time:\", timeString, e);\n      return timeString; // Return original string if formatting fails\n    }\n  };\n  const toggleTheme = () => setDarkMode(!darkMode);\n\n  // --- Filtering (defined after functions) ---\n  const filteredEvents = events.filter(event => event.event_name.toLowerCase().includes(searchQuery.toLowerCase()) || event.location && event.location.toLowerCase().includes(searchQuery.toLowerCase()) // Also search location\n  );\n\n  // --- Render ---\n  return (\n    /*#__PURE__*/\n    // Apply dark mode styles directly if not using ThemeProvider\n    _jsxDEV(\"div\", {\n      style: {\n        padding: 30,\n        backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n        minHeight: '100vh',\n        color: darkMode ? '#ffffff' : '#000000'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        sx: {\n          backgroundColor: darkMode ? '#272727' : 'primary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"PNW Student Life Portal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: toggleTheme,\n            \"aria-label\": \"toggle dark mode\",\n            children: darkMode ? /*#__PURE__*/_jsxDEV(Brightness7, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        marginTop: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Search events by name or location\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value),\n            sx: {\n              mb: 2,\n              // Style for dark mode\n              input: {\n                color: darkMode ? '#fff' : '#000'\n              },\n              label: {\n                color: darkMode ? '#aaa' : 'inherit'\n              },\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                },\n                '&:hover fieldset': {\n                  borderColor: darkMode ? '#888' : 'rgba(0, 0, 0, 0.87)'\n                },\n                '&.Mui-focused fieldset': {\n                  borderColor: darkMode ? 'primary.light' : 'primary.main'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: filteredEvents.length > 0 ? filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  backgroundColor: darkMode ? '#333' : '#fff',\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.12)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    flexGrow: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    sx: {\n                      color: darkMode ? '#eee' : 'inherit'\n                    },\n                    children: event.event_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 1,\n                      color: darkMode ? '#ccc' : 'text.secondary'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(EventAvailable, {\n                      sx: {\n                        mr: 1,\n                        fontSize: '1.1rem'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 49\n                    }, this), formatDate(event.event_date)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 1,\n                      color: darkMode ? '#ccc' : 'text.secondary'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(EventAvailable, {\n                      sx: {\n                        mr: 1,\n                        fontSize: '1.1rem',\n                        opacity: 0\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 49\n                    }, this), \" \", formatTime(event.time_from), event.time_to && ` to ${formatTime(event.time_to)}`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 2,\n                      color: darkMode ? '#ccc' : 'text.secondary'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Map, {\n                      sx: {\n                        mr: 1,\n                        fontSize: '1.1rem'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 49\n                    }, this), \" \", event.location || 'Location TBD']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                  sx: {\n                    justifyContent: 'space-between',\n                    pr: 1,\n                    pb: 1,\n                    pl: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    onClick: () => {\n                      setSelectedEvent(event); // Set the event for the details modal\n                      setParkingSuggestion(getParkingSuggestion(event.location)); // Pre-calculate parking\n                      setShowDetailsDialog(true); // Open details modal\n                    },\n                    children: \"View Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => {\n                      setSelectedEvent(event); // Set the event for the register modal\n                      setSelectedEventId(event.id.toString()); // Set ID needed for registration\n                      // Optionally prefill student ID if already entered for registered events\n                      if (searchStudentID) {\n                        setStudentInfo(prev => ({\n                          ...prev,\n                          studentID: searchStudentID\n                        }));\n                      }\n                      setShowRegisterDialog(true); // Open register modal\n                    },\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 37\n              }, this)\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  textAlign: 'center',\n                  mt: 3,\n                  color: darkMode ? '#aaa' : 'text.secondary'\n                },\n                children: \"No events match your search criteria.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              backgroundColor: darkMode ? '#333' : '#fff',\n              borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.12)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                gutterBottom: true,\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  color: darkMode ? '#eee' : 'inherit'\n                },\n                children: [/*#__PURE__*/_jsxDEV(DirectionsCar, {\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 33\n                }, this), \" Your Registered Events\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Enter Your Student ID to View\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: searchStudentID,\n                onChange: e => setSearchStudentID(e.target.value) // Input triggers useEffect\n                // Dark mode styling\n                ,\n                InputLabelProps: {\n                  style: {\n                    color: darkMode ? '#aaa' : undefined\n                  }\n                },\n                inputProps: {\n                  style: {\n                    color: darkMode ? '#fff' : undefined\n                  }\n                },\n                sx: {\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 29\n              }, this), registeredEvents.length >= 0 ? /*#__PURE__*/_jsxDEV(List, {\n                sx: {\n                  pt: 0,\n                  // Keep existing padding top removal\n                  maxHeight: '600px',\n                  // <-- Set desired max height (adjust value as needed)\n                  overflowY: 'auto',\n                  // <-- Add scrollbar if content exceeds maxHeight\n                  pr: 1 // Add some padding to the right to prevent text hitting scrollbar\n                },\n                children: [\" \", registeredEvents.map((event, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    secondaryAction:\n                    /*#__PURE__*/\n                    // Use secondaryAction prop for button placement\n                    _jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      size: \"small\",\n                      startIcon: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 68\n                      }, this),\n                      onClick: () => handleGetDirections(event.location),\n                      \"aria-label\": `Get directions for ${event.event_name}`,\n                      children: \"Directions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 53\n                    }, this)\n                    // Add padding adjust if needed\n                    ,\n                    sx: {\n                      pt: 1,\n                      pb: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: event.event_name,\n                      secondary: `${formatDate(event.event_date)} at ${event.location || 'TBD'}`,\n                      primaryTypographyProps: {\n                        color: darkMode ? '#fff' : 'inherit',\n                        sx: {\n                          pr: 1\n                        }\n                      } // Add padding right\n                      ,\n                      secondaryTypographyProps: {\n                        color: darkMode ? '#ccc' : 'text.secondary',\n                        sx: {\n                          pr: 1\n                        }\n                      } // Add padding right\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 45\n                  }, this), index < registeredEvents.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n                    component: \"li\",\n                    sx: {\n                      borderColor: darkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.12)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 85\n                  }, this)]\n                }, event.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this) :\n              // Show message only *after* attempting to load (indicated by searchStudentID having value)\n              searchStudentID && registeredEvents.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  textAlign: 'center',\n                  mt: 2,\n                  color: darkMode ? '#aaa' : 'text.secondary'\n                },\n                children: \"No registered events found for this Student ID, or events are loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showDetailsDialog\n        // Reset map state when dialog closes\n        ,\n        onClose: () => {\n          setShowDetailsDialog(false);\n          setShowMap(false); // <-- Hide map when closing\n          setMapUrl(''); // <-- Clear map URL when closing\n        },\n        fullWidth: true,\n        maxWidth: \"md\" // <-- Changed to medium for more map space\n        ,\n        PaperProps: {\n          sx: {\n            backgroundColor: darkMode ? '#333' : '#fff',\n            color: darkMode ? '#fff' : '#000'\n          }\n        },\n        children: selectedEvent &&\n        /*#__PURE__*/\n        // Render only if an event is selected\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            sx: {\n              color: darkMode ? '#eee' : 'inherit'\n            },\n            children: selectedEvent.event_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            dividers: true,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              sx: {\n                color: darkMode ? '#ccc' : 'text.secondary'\n              },\n              children: [/*#__PURE__*/_jsxDEV(EventAvailable, {\n                sx: {\n                  fontSize: '1.1rem',\n                  verticalAlign: 'bottom',\n                  mr: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 33\n              }, this), formatDate(selectedEvent.event_date), \" from \", formatTime(selectedEvent.time_from), \" to \", formatTime(selectedEvent.time_to)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              sx: {\n                color: darkMode ? '#ccc' : 'text.secondary'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Map, {\n                sx: {\n                  fontSize: '1.1rem',\n                  verticalAlign: 'bottom',\n                  mr: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 33\n              }, this), \"Location: \", selectedEvent.location || 'TBD']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this), selectedEvent.abstract && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              paragraph: true,\n              sx: {\n                mt: 2,\n                color: darkMode ? '#ddd' : 'text.primary'\n              },\n              children: selectedEvent.abstract\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 33\n            }, this), parkingSuggestion && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mt: 2,\n                p: 1.5,\n                border: '1px solid',\n                borderColor: darkMode ? 'grey.700' : 'grey.300',\n                borderRadius: 1,\n                backgroundColor: darkMode ? 'rgba(0,0,0,0.2)' : 'grey.100',\n                color: darkMode ? '#eee' : 'inherit'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"Suggested Parking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 37\n              }, this), \" \", parkingSuggestion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n                style: {\n                  fontSize: '0.9em',\n                  color: darkMode ? '#bbb' : 'text.secondary'\n                },\n                children: \"(Always check posted signs)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 44\n              }, this),\n              onClick: () => {\n                // Call the existing function which sets mapUrl and showMap\n                handleGetDirections(selectedEvent.location);\n              },\n              sx: {\n                mt: 2\n              },\n              children: \"Get Directions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: showMap,\n              timeout: \"auto\",\n              unmountOnExit: true,\n              sx: {\n                mt: 2\n              },\n              children: mapUrl ?\n              /*#__PURE__*/\n              // Render iframe only if mapUrl is set\n              _jsxDEV(\"div\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    mb: 1,\n                    color: darkMode ? '#eee' : 'inherit'\n                  },\n                  children: \"Driving Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  src: mapUrl // Ensure this uses Embed API URL + your Key if using iframe\n                  ,\n                  width: \"100%\",\n                  height: \"400\" // Adjusted height slightly for modal\n                  ,\n                  style: {\n                    border: 0\n                  },\n                  allowFullScreen: \"\",\n                  loading: \"lazy\",\n                  referrerPolicy: \"no-referrer-when-downgrade\",\n                  title: \"Directions Map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 37\n              }, this) :\n              /*#__PURE__*/\n              // Optional: show a loading indicator while mapUrl is being fetched\n              _jsxDEV(Typography, {\n                sx: {\n                  color: darkMode ? '#aaa' : 'text.secondary'\n                },\n                children: \"Loading map...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShowDetailsDialog(false);\n                setShowMap(false); // Hide map when closing\n                setMapUrl(''); // Clear map URL when closing\n              },\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showRegisterDialog,\n        onClose: () => {\n          setShowRegisterDialog(false);\n          // Clear student info when closing dialog manually\n          setStudentInfo({\n            firstName: '',\n            middleName: '',\n            lastName: '',\n            studentID: ''\n          });\n        },\n        fullWidth: true,\n        maxWidth: \"xs\" // Make register dialog slightly smaller maybe\n        ,\n        PaperProps: {\n          sx: {\n            backgroundColor: darkMode ? '#333' : '#fff',\n            color: darkMode ? '#fff' : '#000'\n          }\n        },\n        children: selectedEvent &&\n        /*#__PURE__*/\n        // Render only if an event is selected\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            sx: {\n              color: darkMode ? '#eee' : 'inherit',\n              pb: 1\n            },\n            children: [\" \", \"Register for:\", /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                color: darkMode ? '#fff' : 'primary.main'\n              },\n              children: selectedEvent.event_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"First Name\",\n              required: true,\n              fullWidth: true,\n              margin: \"normal\",\n              value: studentInfo.firstName,\n              onChange: e => setStudentInfo({\n                ...studentInfo,\n                firstName: e.target.value\n              }),\n              InputLabelProps: {\n                style: {\n                  color: darkMode ? '#aaa' : undefined\n                }\n              },\n              inputProps: {\n                style: {\n                  color: darkMode ? '#fff' : undefined\n                }\n              },\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  '& fieldset': {\n                    borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Middle Name\",\n              fullWidth: true,\n              margin: \"normal\",\n              value: studentInfo.middleName,\n              onChange: e => setStudentInfo({\n                ...studentInfo,\n                middleName: e.target.value\n              }),\n              InputLabelProps: {\n                style: {\n                  color: darkMode ? '#aaa' : undefined\n                }\n              },\n              inputProps: {\n                style: {\n                  color: darkMode ? '#fff' : undefined\n                }\n              },\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  '& fieldset': {\n                    borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Last Name\",\n              required: true,\n              fullWidth: true,\n              margin: \"normal\",\n              value: studentInfo.lastName,\n              onChange: e => setStudentInfo({\n                ...studentInfo,\n                lastName: e.target.value\n              }),\n              InputLabelProps: {\n                style: {\n                  color: darkMode ? '#aaa' : undefined\n                }\n              },\n              inputProps: {\n                style: {\n                  color: darkMode ? '#fff' : undefined\n                }\n              },\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  '& fieldset': {\n                    borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Student ID\",\n              required: true,\n              fullWidth: true,\n              margin: \"normal\",\n              value: studentInfo.studentID,\n              onChange: e => setStudentInfo({\n                ...studentInfo,\n                studentID: e.target.value\n              }),\n              InputLabelProps: {\n                style: {\n                  color: darkMode ? '#aaa' : undefined\n                }\n              },\n              inputProps: {\n                style: {\n                  color: darkMode ? '#fff' : undefined\n                }\n              },\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  '& fieldset': {\n                    borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            sx: {\n              p: '16px 24px'\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShowRegisterDialog(false);\n                setStudentInfo({\n                  firstName: '',\n                  middleName: '',\n                  lastName: '',\n                  studentID: ''\n                }); // Clear info on cancel\n              },\n              color: \"error\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleRegister,\n              color: \"primary\",\n              variant: \"contained\",\n              children: \"Submit Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showAddDialog,\n        onClose: () => setShowAddDialog(false),\n        fullWidth: true,\n        maxWidth: \"sm\",\n        PaperProps: {\n          sx: {\n            backgroundColor: darkMode ? '#333' : '#fff',\n            color: darkMode ? '#fff' : '#000'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          sx: {\n            color: darkMode ? '#eee' : 'inherit'\n          },\n          children: \"Add a New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Event Name\",\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            value: newEvent.event_name,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              event_name: e.target.value\n            }),\n            InputLabelProps: {\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Abstract\",\n            fullWidth: true,\n            margin: \"normal\",\n            multiline: true,\n            rows: 3,\n            value: newEvent.abstract,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              abstract: e.target.value\n            }),\n            InputLabelProps: {\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Event Date\",\n            required: true,\n            type: \"date\",\n            InputLabelProps: {\n              shrink: true,\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            fullWidth: true,\n            margin: \"normal\",\n            value: newEvent.event_date,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              event_date: e.target.value\n            }),\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Location\",\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            value: newEvent.location,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              location: e.target.value\n            }),\n            InputLabelProps: {\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Cost (Enter 0 if free)\",\n            type: \"number\",\n            fullWidth: true,\n            margin: \"normal\",\n            value: newEvent.cost,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              cost: e.target.value\n            }),\n            InputLabelProps: {\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Start Time\",\n            required: true,\n            type: \"time\",\n            InputLabelProps: {\n              shrink: true,\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            fullWidth: true,\n            margin: \"normal\",\n            value: newEvent.time_from,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              time_from: e.target.value\n            }),\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"End Time\",\n            required: true,\n            type: \"time\",\n            InputLabelProps: {\n              shrink: true,\n              style: {\n                color: darkMode ? '#aaa' : undefined\n              }\n            },\n            fullWidth: true,\n            margin: \"normal\",\n            value: newEvent.time_to,\n            onChange: e => setNewEvent({\n              ...newEvent,\n              time_to: e.target.value\n            }),\n            inputProps: {\n              style: {\n                color: darkMode ? '#fff' : undefined\n              }\n            },\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowAddDialog(false),\n            color: \"error\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddEvent,\n            color: \"primary\",\n            children: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbar.open,\n        autoHideDuration: snackbar.severity === 'info' ? 2000 : 4000 // Shorter for info messages\n        ,\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: snackbar.severity || 'info' // Default to info if severity is missing\n          ,\n          sx: {\n            width: '100%'\n          },\n          onClose: () => setSnackbar({\n            ...snackbar,\n            open: false\n          }) // Allow closing via X icon\n          ,\n          children: snackbar.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add new event\",\n        sx: {\n          position: 'fixed',\n          bottom: 30,\n          right: 30\n        } // Adjusted positioning slightly\n        ,\n        onClick: () => setShowAddDialog(true),\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"ik96Tje7GsxR6YCGIssu83KwTjg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","MenuItem","Select","InputLabel","FormControl","Card","CardActions","CardContent","Typography","Grid","Snackbar","Alert","IconButton","AppBar","Toolbar","Switch","Collapse","Dialog","DialogTitle","DialogContent","DialogActions","Fab","List","ListItem","ListItemText","ListItemSecondaryAction","Divider","DirectionsCar","EventAvailable","AddCircle","Map","Brightness4","Brightness7","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","events","setEvents","selectedEventId","setSelectedEventId","selectedEvent","setSelectedEvent","mapUrl","setMapUrl","parkingSuggestion","setParkingSuggestion","destination","setDestination","registeredEvents","setRegisteredEvents","selectedRegisteredEvent","setSelectedRegisteredEvent","searchStudentID","setSearchStudentID","snackbar","setSnackbar","open","message","severity","darkMode","setDarkMode","searchQuery","setSearchQuery","showAddDialog","setShowAddDialog","showMap","setShowMap","showDetailsDialog","setShowDetailsDialog","showRegisterDialog","setShowRegisterDialog","studentInfo","setStudentInfo","firstName","middleName","lastName","studentID","newEvent","setNewEvent","event_name","abstract","event_date","location","cost","time_from","time_to","parkingMappings","getParkingSuggestion","locationString","lowerLocation","toLowerCase","specificKeys","Object","keys","filter","k","key","includes","fetchEvents","trim","length","debounceTimer","setTimeout","fetchRegisteredEvents","clearTimeout","get","then","response","data","catch","error","console","autoHideDuration","handleRegister","post","eventID","_error$response","_error$response$data","handleAddEvent","_error$response2","_error$response2$data","handleEventSelect","e","selectedId","target","value","event","find","ev","id","toString","handleGetDirections","eventLocation","dest","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","origin","apiKey","log","embedUrl","encodeURIComponent","code","formatDate","dateString","Date","toLocaleDateString","year","month","day","timeZone","formatTime","timeString","hours","minutes","split","date","setHours","parseInt","toLocaleTimeString","hour","minute","hour12","toggleTheme","filteredEvents","style","padding","backgroundColor","minHeight","color","children","sx","variant","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","container","spacing","marginTop","item","xs","label","fullWidth","onChange","mb","input","borderColor","map","sm","md","height","display","flexDirection","gutterBottom","alignItems","mr","fontSize","opacity","justifyContent","pr","pb","pl","size","prev","textAlign","mt","margin","InputLabelProps","undefined","inputProps","pt","maxHeight","overflowY","index","secondaryAction","startIcon","primary","secondary","primaryTypographyProps","secondaryTypographyProps","component","onClose","maxWidth","PaperProps","dividers","verticalAlign","paragraph","p","border","borderRadius","fontWeight","in","timeout","unmountOnExit","src","width","allowFullScreen","loading","referrerPolicy","title","required","multiline","rows","type","shrink","anchorOrigin","vertical","horizontal","bottom","right","_c","$RefreshReg$"],"sources":["C:/Users/jayp9/WebstormProjects/student-life-webapp/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    TextField, Button, MenuItem, Select, InputLabel, FormControl, Card, CardActions, CardContent, // Added CardActions\r\n    Typography, Grid, Snackbar, Alert, IconButton, AppBar, Toolbar, Switch, Collapse, Dialog,\r\n    DialogTitle, DialogContent, DialogActions, Fab, List, ListItem, ListItemText,\r\n    ListItemSecondaryAction, Divider\r\n} from '@mui/material';\r\nimport { DirectionsCar, EventAvailable, AddCircle, Map, Brightness4, Brightness7 } from '@mui/icons-material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n\r\nfunction App() {\r\n    // --- State Variables ---\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedEventId, setSelectedEventId] = useState('');\r\n    const [selectedEvent, setSelectedEvent] = useState(null);\r\n    const [mapUrl, setMapUrl] = useState('');\r\n    const [parkingSuggestion, setParkingSuggestion] = useState(''); // <-- Parking Suggestion State\r\n    const [destination, setDestination] = useState('Purdue University Northwest');\r\n    const [registeredEvents, setRegisteredEvents] = useState([]);\r\n    const [selectedRegisteredEvent, setSelectedRegisteredEvent] = useState('');\r\n    const [searchStudentID, setSearchStudentID] = useState('');\r\n    const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    // Removed filteredEvents definition from here, moved below functions\r\n\r\n    const [showAddDialog, setShowAddDialog] = useState(false);\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showDetailsDialog, setShowDetailsDialog] = useState(false); // <-- ADDED state for Details modal\r\n    const [showRegisterDialog, setShowRegisterDialog] = useState(false); // <-- ADDED state for Register modal\r\n\r\n\r\n    const [studentInfo, setStudentInfo] = useState({\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        studentID: ''\r\n    });\r\n\r\n    const [newEvent, setNewEvent] = useState({\r\n        event_name: '',\r\n        abstract: '',\r\n        event_date: '',\r\n        location: '',\r\n        cost: '',\r\n        time_from: '',\r\n        time_to: ''\r\n    });\r\n\r\n// --- REVISED Parking Data and Helper Function ---\r\n    const parkingMappings = {\r\n        // --- ADD PARKING LOTS AS LOCATIONS ---\r\n        'parking lot 1': 'Event is in Lot 1. Nearby options: Parking Garage, Lot 5.',\r\n        'parking lot 2': 'Event is in Lot 2. Nearby options: Parking Garage, Lot 8, Lot 9.',\r\n        'parking lot 3': 'Event is in Lot 3. Nearby options: Lot 1, Lot 5, Parking Garage.',\r\n        'parking lot 4': 'Event is in Lot 4 (West side). Nearby options: Lot 5.', // Small lot\r\n        'parking lot 5': 'Event is in Lot 5. Nearby options: Lot 1, Lot 3, Parking Garage.',\r\n        'parking lot 6': 'Event is in Lot 6. Nearby options: Parking Garage, Lot 7.', // User's case\r\n        'parking lot 7': 'Event is in Lot 7. Nearby options: Lot 6, Lot 16 (near Schneider).',\r\n        'parking lot 8': 'Event is in Lot 8. Nearby options: Parking Garage, Lot 2, Lot 9.',\r\n        'parking lot 9': 'Event is in Lot 9. Nearby options: Parking Garage, Lot 2, Lot 8.',\r\n        'parking lot 10': 'Event is in Lot 10. Nearby options: Lot 11, Parking Garage.',\r\n        'parking lot 11': 'Event is in Lot 11. Nearby options: Lot 10, Parking Garage.',\r\n        'parking lot 12': 'Event is in Lot 12 (South Campus). Nearby options: Lot 13, Lot 14.',\r\n        'parking lot 13': 'Event is in Lot 13 (Main South Lot). Nearby options: Lot 12, Lot 14.',\r\n        'parking lot 14': 'Event is in Lot 14 (South Campus). Nearby options: Lot 13, Lot 12.',\r\n        'parking lot 15': 'Event is in Lot 15 (Southwest). Nearby options: Lot 12, Lot 14.',\r\n        'parking lot 16': 'Event is in Lot 16 (Northeast). Nearby options: Lot 7.',\r\n        'parking garage': 'Event is in the Parking Garage. Check for specific levels/areas.', // Garage itself\r\n\r\n        // Hammond Campus - Based on Hammond-Map-Lage.png\r\n        'anderson': 'Parking Garage, Lot 1, Lot 5', // West side, North\r\n        'classroom office': 'Parking Garage, Lot 1, Lot 5', // West side, North\r\n        'cob': 'Parking Garage, Lot 1, Lot 5', // West side, North\r\n        'potter': 'Parking Garage, Lot 1, Lot 5', // West side, North-Mid\r\n        'powers': 'Parking Garage, Lot 1, Lot 3, Lot 5', // West side, Mid\r\n        'gyte': 'Parking Garage, Lot 1, Lot 3, Lot 5', // West side, Mid-South\r\n        'lawshe': 'Parking Garage, Lot 10, Lot 11', // Southwest academic area\r\n        'student union': 'Parking Garage, Lot 2, Lot 8, Lot 9', // Central academic area\r\n        'library': 'Parking Garage, Lot 2, Lot 8, Lot 9', // Central academic area\r\n        'sulb': 'Parking Garage, Lot 2, Lot 8, Lot 9', // Central academic area\r\n        'nils k nelson': 'Parking Garage, Lot 8, Lot 9', // South of SULB\r\n        'bioscience': 'Parking Garage, Lot 8, Lot 9', // South of SULB\r\n        'porter': 'Parking Garage, Lot 2', // East of SULB\r\n        'design studio': 'Parking Garage, Lot 1', // North area, near 169th\r\n        'university services': 'Parking Garage, Lot 1', // North area, near 169th\r\n        'schneider': 'Lot 16, Lot 7', // Northeast corner\r\n        'police': 'Lot 16, Lot 7 (Near Schneider Ave Bldg)', // Assumed near Schneider\r\n        'fitness': 'Lot 13, Lot 14, Lot 12 (South of 173rd)', // South Campus\r\n        'recreation': 'Lot 13, Lot 14, Lot 12 (South of 173rd)', // South Campus\r\n        'peregrine': 'Lot 13 (Main South Lot)', // University Village Housing\r\n        'griffin': 'Lot 13 (Main South Lot)', // University Village Housing\r\n        'university village': 'Lot 13 (Main South Lot)', // University Village Housing\r\n        'counseling': 'Lot 15', // Southwest area\r\n        'healthy living': 'Lot 15', // Southwest area\r\n        'white lodging': 'Lot 14, Lot 13', // Southwest area\r\n        'hospitality': 'Lot 14, Lot 13', // Keyword for White Lodging\r\n        'challenger': 'Lot 14, Lot 13', // Keyword for White Lodging location\r\n\r\n        // Off-map buildings mentioned previously - keep general suggestions from search results\r\n        'dowling park': 'Dowling Park Athletics Complex Parking',\r\n        'athletics': 'Dowling Park Athletics Complex Parking',\r\n        'roberts center': 'Parking near Roberts Center (7040 Indianapolis Blvd)',\r\n        'cmec': 'Parking near CMEC (7150 Indianapolis Blvd)',\r\n\r\n        // Hammond General Catch-all - Garage is central, but check map link too\r\n        'hammond': 'Parking Garage or check map for lot near specific building',\r\n\r\n        // --- Westville Campus Keywords -> Suggestions (Keep previous or refine if Westville map provided) ---\r\n        'schwarz': 'Lots North or East of Schwarz Hall (Check Westville map)',\r\n        'technology': 'Lots East of Technology Building (Check Westville map)',\r\n        'tech building': 'Lots East of Technology Building (Check Westville map)',\r\n        'library student faculty': 'Lots North of LSF (Check Westville map)',\r\n        'lsf': 'Lots North of LSF (Check Westville map)',\r\n        'dworkin': 'Lots East or South of DSAC (Check Westville map)',\r\n        'dsac': 'Lots East or South of DSAC (Check Westville map)',\r\n        'student services': 'Lots East or South of DSAC (Check Westville map)',\r\n        'westville': 'Check Westville campus map for lots near specific building',\r\n\r\n        // Default if no match\r\n        'default': 'Please check official PNW Campus Maps for specific parking.'\r\n    };\r\n\r\n    // The getParkingSuggestion function remains the same as before\r\n    const getParkingSuggestion = (locationString) => {\r\n        if (!locationString) {\r\n            return parkingMappings['default'];\r\n        }\r\n        const lowerLocation = locationString.toLowerCase();\r\n\r\n        const specificKeys = Object.keys(parkingMappings).filter(k => k !== 'hammond' && k !== 'westville' && k !== 'default');\r\n        for (const key of specificKeys) {\r\n            if (lowerLocation.includes(key)) {\r\n                return parkingMappings[key];\r\n            }\r\n        }\r\n\r\n        if (lowerLocation.includes('hammond')) {\r\n            return parkingMappings['hammond'];\r\n        }\r\n        if (lowerLocation.includes('westville')) {\r\n            return parkingMappings['westville'];\r\n        }\r\n\r\n        return parkingMappings['default'];\r\n    };\r\n    // --- End REVISED Parking Data and Function ---\r\n\r\n    // --- Effects ---\r\n    useEffect(() => { fetchEvents(); }, []);\r\n\r\n    // --- ADDED: useEffect for debounced fetching of registered events ---\r\n    useEffect(() => {\r\n        // Don't fetch if ID is empty or too short (optional, adjust min length if needed)\r\n        if (!searchStudentID || searchStudentID.trim().length < 3) {\r\n            setRegisteredEvents([]); // Clear previous results if ID becomes too short\r\n            return;\r\n        }\r\n\r\n        // Set a timer to fetch events after a short delay\r\n        const debounceTimer = setTimeout(() => {\r\n            fetchRegisteredEvents();\r\n        }, 750); // Adjust delay as needed (750ms)\r\n\r\n        // Cleanup function: Clear the timer if the user types again before delay finishes\r\n        return () => {\r\n            clearTimeout(debounceTimer);\r\n        };\r\n\r\n    }, [searchStudentID]); // Dependency array: Re-run effect only when searchStudentID changes\r\n    // Note: If fetchRegisteredEvents used other state/props, it might need to be included or memoized\r\n\r\n\r\n    // --- Data Fetching ---\r\n    const fetchEvents = () => {\r\n        axios.get('http://localhost:5000/events')\r\n            .then(response => setEvents(response.data))\r\n            .catch(error => console.error('Error fetching events', error));\r\n    };\r\n\r\n    // MODIFIED fetchRegisteredEvents for automatic loading\r\n    const fetchRegisteredEvents = () => {\r\n        // This function now gets called by the useEffect, but the check inside is still important\r\n        if (!searchStudentID) {\r\n            // This check might be redundant now due to useEffect check, but harmless\r\n            // setSnackbar({ open: true, message: 'Please enter your Student ID first.', severity: 'warning' });\r\n            return;\r\n        }\r\n\r\n        // Add a loading indicator maybe?\r\n        setSnackbar({ open: true, message: `Loading events for ${searchStudentID}...`, severity: 'info', autoHideDuration: 1500 });\r\n\r\n\r\n        axios.get(`http://localhost:5000/my-registrations/${searchStudentID}`)\r\n            .then(response => {\r\n                setRegisteredEvents(response.data);\r\n                if (response.data.length === 0) {\r\n                    setSnackbar({ open: true, message: 'No registered events found for this ID.', severity: 'info' });\r\n                }\r\n                // Don't automatically select an event anymore\r\n                // if (response.data.length > 0) {\r\n                //     setSelectedRegisteredEvent(response.data[0].id.toString());\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching registered events', error);\r\n                setRegisteredEvents([]); // Clear results on error\r\n                setSnackbar({ open: true, message: 'Could not fetch registered events.', severity: 'error' });\r\n            });\r\n    };\r\n\r\n\r\n    // --- Event Handlers ---\r\n    const handleRegister = () => { // MODIFIED for Dialog\r\n        if (!selectedEventId || !studentInfo.studentID || !studentInfo.firstName || !studentInfo.lastName) {\r\n            setSnackbar({ open: true, message: 'Please select an event and fill in required student information (First Name, Last Name, Student ID).', severity: 'warning' });\r\n            return;\r\n        }\r\n\r\n        axios.post('http://localhost:5000/register', { ...studentInfo, eventID: selectedEventId })\r\n            .then(response => {\r\n                setSnackbar({ open: true, message: response.data.message || 'Registration successful!', severity: 'success' });\r\n                // Clear form and close registration section\r\n                setShowRegisterDialog(false); // <-- Close the register modal\r\n                setStudentInfo({ firstName: '', middleName: '', lastName: '', studentID: '' });\r\n                // Clear selected event info related to registration\r\n                setSelectedEventId('');\r\n                // Optionally keep selectedEvent for potential other uses, or clear it too if desired\r\n                // setSelectedEvent(null);\r\n                setParkingSuggestion(''); // Clear suggestion\r\n            })\r\n            .catch(error => {\r\n                console.error('Error registering student', error);\r\n                const message = error.response?.data?.message || 'Registration failed. Please try again.';\r\n                setSnackbar({ open: true, message: message, severity: 'error' });\r\n            });\r\n    };\r\n\r\n    const handleAddEvent = () => {\r\n        // Basic validation for new event\r\n        if (!newEvent.event_name || !newEvent.event_date || !newEvent.location || !newEvent.time_from || !newEvent.time_to) {\r\n            setSnackbar({ open: true, message: 'Please fill in all required event fields (Name, Date, Location, Times).', severity: 'warning' });\r\n            return;\r\n        }\r\n\r\n        axios.post('http://localhost:5000/add-event', newEvent)\r\n            .then(response => {\r\n                setSnackbar({ open: true, message: response.data.message || 'Event added successfully!', severity: 'success' });\r\n                setNewEvent({ event_name: '', abstract: '', event_date: '', location: '', cost: '', time_from: '', time_to: '' }); // Clear form\r\n                setShowAddDialog(false); // Close dialog\r\n                fetchEvents(); // Refresh event list\r\n            })\r\n            .catch(error => {\r\n                console.error('Error adding event', error);\r\n                const message = error.response?.data?.message || 'Adding event failed. Please try again.';\r\n                setSnackbar({ open: true, message: message, severity: 'error' });\r\n            });\r\n    };\r\n\r\n    // Handles the SELECT dropdown inside the old registration form - NO LONGER USED directly for triggering parking suggestions\r\n    const handleEventSelect = (e) => {\r\n        const selectedId = e.target.value;\r\n        setSelectedEventId(selectedId);\r\n        const event = events.find(ev => ev.id.toString() === selectedId);\r\n        setSelectedEvent(event); // Update the selected event context if needed\r\n\r\n        // Parking suggestion is now handled by button clicks opening modals\r\n        if (event) {\r\n            setDestination(event.location || 'Purdue University Northwest');\r\n            // setParkingSuggestion(getParkingSuggestion(event.location)); // REMOVED - handled by modal triggers\r\n        } else {\r\n            setParkingSuggestion('');\r\n        }\r\n    };\r\n\r\n    const handleGetDirections = (eventLocation) => {\r\n        const dest = eventLocation || 'Purdue University Northwest, Hammond, IN'; // Default destination\r\n\r\n        if (!navigator.geolocation) {\r\n            setSnackbar({ open: true, message: 'Geolocation is not supported by your browser.', severity: 'warning' });\r\n            return;\r\n        }\r\n\r\n        setSnackbar({ open: true, message: 'Getting your location...', severity: 'info', autoHideDuration: 2000 });\r\n        // Ensure map is hidden initially while loading new one - Not hiding the main page one now\r\n        // setShowMap(false); // We don't control the main page map anymore\r\n        setMapUrl(''); // Clear previous URL\r\n\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                const origin = `${latitude},${longitude}`;\r\n\r\n                // --- Use Google Maps Embed API for iframe ---\r\n                // ** Replace YOUR_API_KEY with your actual Google Maps API Key **\r\n                const apiKey = 'AIzaSyAx7-WecbbIOx8S7vCgaz64xB2yWfvpzgw'; // <-- User Provided Key\r\n                console.log(\"Checking API Key. Value is:\", apiKey);\r\n                // Add a more robust check, ensure it's not placeholder or empty\r\n                if (!apiKey || apiKey === 'YOUR_API_KEY' || apiKey.trim() === '') {\r\n                    setSnackbar({ open: true, message: 'API Key missing or invalid for embedded map.', severity: 'error' });\r\n                    console.error(\"API Key for Google Maps Embed API is missing or invalid!\");\r\n                    return; // Stop if no valid API key\r\n                }\r\n\r\n                // Construct the Embed API URL for directions\r\n                const embedUrl = `https://www.google.com/maps/dir/?api=1&origin=$1{apiKey}&origin=${origin}&destination=${encodeURIComponent(dest)}&mode=driving`; // Added mode=driving\r\n\r\n                setMapUrl(embedUrl); // Set the URL for the iframe\r\n                setShowMap(true);   // Set state to show the Collapse containing the iframe (now inside the modal)\r\n                setSnackbar({ open: true, message: 'Directions loading...', severity: 'info', autoHideDuration: 1500 }); // Info while loading map\r\n                // --- End Embed API Logic ---\r\n\r\n            },\r\n            (error) => {\r\n                console.error('Error getting location:', error);\r\n                let message = 'Unable to retrieve your location. Please ensure location services are enabled.';\r\n                if (error.code === 1) { // PERMISSION_DENIED\r\n                    message = 'Location permission denied. Please enable it in your browser settings.';\r\n                }\r\n                setSnackbar({ open: true, message: message, severity: 'error' });\r\n                setShowMap(false); // Keep map hidden on error\r\n                setMapUrl('');\r\n            }\r\n        );\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return 'Date TBD';\r\n        try {\r\n            // Adding timeZone option to help consistency\r\n            return new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' });\r\n        } catch (e) {\r\n            console.error(\"Error formatting date:\", dateString, e);\r\n            return \"Invalid Date\";\r\n        }\r\n    };\r\n\r\n    const formatTime = (timeString) => {\r\n        if (!timeString) return '';\r\n        try {\r\n            // Attempt to parse time, assuming HH:MM or HH:MM:SS format\r\n            const [hours, minutes] = timeString.split(':');\r\n            const date = new Date();\r\n            date.setHours(parseInt(hours, 10), parseInt(minutes || 0, 10), 0);\r\n            return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true });\r\n        } catch (e) {\r\n            console.error(\"Error formatting time:\", timeString, e);\r\n            return timeString; // Return original string if formatting fails\r\n        }\r\n    };\r\n\r\n\r\n    const toggleTheme = () => setDarkMode(!darkMode);\r\n\r\n    // --- Filtering (defined after functions) ---\r\n    const filteredEvents = events.filter(event =>\r\n        event.event_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        (event.location && event.location.toLowerCase().includes(searchQuery.toLowerCase())) // Also search location\r\n    );\r\n\r\n    // --- Render ---\r\n    return (\r\n        // Apply dark mode styles directly if not using ThemeProvider\r\n        <div style={{ padding: 30, backgroundColor: darkMode ? '#121212' : '#f5f5f5', minHeight: '100vh', color: darkMode ? '#ffffff' : '#000000' }}>\r\n            {/* --- App Bar --- */}\r\n            <AppBar position=\"static\" sx={{ backgroundColor: darkMode ? '#272727' : 'primary.main' }}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>PNW Student Life Portal</Typography>\r\n                    <IconButton color=\"inherit\" onClick={toggleTheme} aria-label=\"toggle dark mode\">\r\n                        {darkMode ? <Brightness7 /> : <Brightness4 />}\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/* --- Main Content Grid --- */}\r\n            <Grid container spacing={4} marginTop={3}>\r\n\r\n                {/* --- Event Search and Display --- */}\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        label=\"Search events by name or location\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        sx={{\r\n                            mb: 2,\r\n                            // Style for dark mode\r\n                            input: { color: darkMode ? '#fff' : '#000' },\r\n                            label: { color: darkMode ? '#aaa' : 'inherit' },\r\n                            '& .MuiOutlinedInput-root': {\r\n                                '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' },\r\n                                '&:hover fieldset': { borderColor: darkMode ? '#888' : 'rgba(0, 0, 0, 0.87)' },\r\n                                '&.Mui-focused fieldset': { borderColor: darkMode ? 'primary.light' : 'primary.main' },\r\n                            },\r\n                        }}\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        {filteredEvents.length > 0 ? (\r\n                            filteredEvents.map((event) => (\r\n                                <Grid item xs={12} sm={6} md={4} key={event.id}>\r\n                                    <Card variant=\"outlined\" sx={{ height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: darkMode ? '#333' : '#fff', borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.12)' }}>\r\n                                        <CardContent sx={{ flexGrow: 1 }}>\r\n                                            <Typography variant=\"h6\" gutterBottom sx={{ color: darkMode ? '#eee' : 'inherit' }}>{event.event_name}</Typography>\r\n                                            <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mb: 1, color: darkMode ? '#ccc' : 'text.secondary' }}>\r\n                                                <EventAvailable sx={{ mr: 1, fontSize: '1.1rem' }} />\r\n                                                {formatDate(event.event_date)}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mb: 1, color: darkMode ? '#ccc' : 'text.secondary' }}>\r\n                                                <EventAvailable sx={{ mr: 1, fontSize: '1.1rem', opacity: 0 }} /> {/* Placeholder for alignment */}\r\n                                                {formatTime(event.time_from)}\r\n                                                {event.time_to && ` to ${formatTime(event.time_to)}`}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ display: 'flex', alignItems: 'center', mb: 2, color: darkMode ? '#ccc' : 'text.secondary' }}>\r\n                                                <Map sx={{ mr: 1, fontSize: '1.1rem' }} /> {event.location || 'Location TBD'}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        {/* --- MODIFIED CardActions --- */}\r\n                                        <CardActions sx={{ justifyContent: 'space-between', pr: 1, pb: 1, pl: 1 }}>\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                onClick={() => {\r\n                                                    setSelectedEvent(event); // Set the event for the details modal\r\n                                                    setParkingSuggestion(getParkingSuggestion(event.location)); // Pre-calculate parking\r\n                                                    setShowDetailsDialog(true); // Open details modal\r\n                                                }}\r\n                                            >\r\n                                                View Details\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                size=\"small\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => {\r\n                                                    setSelectedEvent(event); // Set the event for the register modal\r\n                                                    setSelectedEventId(event.id.toString()); // Set ID needed for registration\r\n                                                    // Optionally prefill student ID if already entered for registered events\r\n                                                    if (searchStudentID) {\r\n                                                        setStudentInfo(prev => ({ ...prev, studentID: searchStudentID }));\r\n                                                    }\r\n                                                    setShowRegisterDialog(true); // Open register modal\r\n                                                }}\r\n                                            >\r\n                                                Register\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                        {/* --- End MODIFIED CardActions --- */}\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))\r\n                        ) : (\r\n                            <Grid item xs={12}>\r\n                                <Typography sx={{ textAlign: 'center', mt: 3, color: darkMode ? '#aaa' : 'text.secondary' }}>\r\n                                    No events match your search criteria.\r\n                                </Typography>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* --- REMOVED Registration Form Collapse Section --- */}\r\n\r\n\r\n                {/* --- Registered Events Section (MODIFIED - Button Removed) --- */}\r\n                <Grid item xs={12}>\r\n                    <Card sx={{ backgroundColor: darkMode ? '#333' : '#fff', borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.12)' }}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" gutterBottom sx={{ display: 'flex', alignItems: 'center', color: darkMode ? '#eee' : 'inherit' }}>\r\n                                <DirectionsCar sx={{ mr: 1 }} /> Your Registered Events\r\n                            </Typography>\r\n                            <TextField\r\n                                label=\"Enter Your Student ID to View\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                value={searchStudentID}\r\n                                onChange={e => setSearchStudentID(e.target.value)} // Input triggers useEffect\r\n                                // Dark mode styling\r\n                                InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }}\r\n                                inputProps={{ style: { color: darkMode ? '#fff' : undefined } }}\r\n                                sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}\r\n                            />\r\n\r\n                            {registeredEvents.length >= 0 ? (\r\n                                <List sx={{\r\n                                    pt: 0, // Keep existing padding top removal\r\n                                    maxHeight: '600px', // <-- Set desired max height (adjust value as needed)\r\n                                    overflowY: 'auto',  // <-- Add scrollbar if content exceeds maxHeight\r\n                                    pr: 1 // Add some padding to the right to prevent text hitting scrollbar\r\n                                }}> {/* Remove top padding on list */}\r\n                                    {registeredEvents.map((event, index) => (\r\n                                        <React.Fragment key={event.id}>\r\n                                            <ListItem\r\n                                                secondaryAction={ // Use secondaryAction prop for button placement\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"secondary\"\r\n                                                        size=\"small\"\r\n                                                        startIcon={<Map />}\r\n                                                        onClick={() => handleGetDirections(event.location)}\r\n                                                        aria-label={`Get directions for ${event.event_name}`}\r\n                                                    >\r\n                                                        Directions\r\n                                                    </Button>\r\n                                                }\r\n                                                // Add padding adjust if needed\r\n                                                sx={{ pt:1, pb: 1}}\r\n                                            >\r\n                                                <ListItemText\r\n                                                    primary={event.event_name}\r\n                                                    secondary={`${formatDate(event.event_date)} at ${event.location || 'TBD'}`}\r\n                                                    primaryTypographyProps={{ color: darkMode ? '#fff' : 'inherit', sx:{ pr: 1 } }} // Add padding right\r\n                                                    secondaryTypographyProps={{ color: darkMode ? '#ccc' : 'text.secondary', sx:{ pr: 1 } }} // Add padding right\r\n                                                />\r\n                                            </ListItem>\r\n                                            {index < registeredEvents.length - 1 && <Divider component=\"li\" sx={{ borderColor: darkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.12)' }} />}\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </List>\r\n                            ) : (\r\n                                // Show message only *after* attempting to load (indicated by searchStudentID having value)\r\n                                searchStudentID && registeredEvents.length === 0 && (\r\n                                    <Typography sx={{ textAlign: 'center', mt: 2, color: darkMode ? '#aaa' : 'text.secondary' }}>\r\n                                        No registered events found for this Student ID, or events are loading...\r\n                                    </Typography>\r\n                                )\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                {/* --- REMOVED Map Display Collapse Section from Main Page --- */}\r\n\r\n            </Grid>\r\n\r\n            {/* --- View Event Details Dialog (Map Inside) --- */}\r\n            <Dialog\r\n                open={showDetailsDialog}\r\n                // Reset map state when dialog closes\r\n                onClose={() => {\r\n                    setShowDetailsDialog(false);\r\n                    setShowMap(false); // <-- Hide map when closing\r\n                    setMapUrl('');     // <-- Clear map URL when closing\r\n                }}\r\n                fullWidth\r\n                maxWidth=\"md\" // <-- Changed to medium for more map space\r\n                PaperProps={{ sx: { backgroundColor: darkMode ? '#333' : '#fff', color: darkMode ? '#fff' : '#000' } }}\r\n            >\r\n                {selectedEvent && ( // Render only if an event is selected\r\n                    <>\r\n                        <DialogTitle sx={{ color: darkMode ? '#eee' : 'inherit' }}>\r\n                            {selectedEvent.event_name}\r\n                        </DialogTitle>\r\n                        <DialogContent dividers> {/* Use dividers for better content separation */}\r\n                            {/* Event Info */}\r\n                            <Typography gutterBottom sx={{ color: darkMode ? '#ccc' : 'text.secondary' }}>\r\n                                <EventAvailable sx={{ fontSize: '1.1rem', verticalAlign: 'bottom', mr: 0.5 }} />\r\n                                {formatDate(selectedEvent.event_date)} from {formatTime(selectedEvent.time_from)} to {formatTime(selectedEvent.time_to)}\r\n                            </Typography>\r\n                            <Typography gutterBottom sx={{ color: darkMode ? '#ccc' : 'text.secondary' }}>\r\n                                <Map sx={{ fontSize: '1.1rem', verticalAlign: 'bottom', mr: 0.5 }} />\r\n                                Location: {selectedEvent.location || 'TBD'}\r\n                            </Typography>\r\n\r\n                            {/* Abstract/Description */}\r\n                            {selectedEvent.abstract && (\r\n                                <Typography variant=\"body2\" paragraph sx={{ mt: 2, color: darkMode ? '#ddd' : 'text.primary' }}>\r\n                                    {selectedEvent.abstract}\r\n                                </Typography>\r\n                            )}\r\n\r\n                            {/* Parking Suggestion */}\r\n                            {parkingSuggestion && (\r\n                                <Typography variant=\"body2\" sx={{ mt: 2, p: 1.5, border: '1px solid', borderColor: darkMode ? 'grey.700' : 'grey.300', borderRadius: 1, backgroundColor: darkMode ? 'rgba(0,0,0,0.2)' : 'grey.100', color: darkMode ? '#eee' : 'inherit' }}>\r\n                                    <span style={{ fontWeight: 'bold' }}>Suggested Parking:</span> {parkingSuggestion}\r\n                                    <br />\r\n                                    <em style={{ fontSize: '0.9em', color: darkMode ? '#bbb' : 'text.secondary' }}>(Always check posted signs)</em>\r\n                                </Typography>\r\n                            )}\r\n\r\n                            {/* Get Directions Button */}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<Map />}\r\n                                onClick={() => {\r\n                                    // Call the existing function which sets mapUrl and showMap\r\n                                    handleGetDirections(selectedEvent.location);\r\n                                }}\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                Get Directions\r\n                            </Button>\r\n\r\n                            {/* --- Map Display Collapse Section (MOVED INSIDE DIALOG) --- */}\r\n                            <Collapse in={showMap} timeout=\"auto\" unmountOnExit sx={{ mt: 2 }}>\r\n                                {mapUrl ? ( // Render iframe only if mapUrl is set\r\n                                    <div> {/* Simple div container */}\r\n                                        <Typography variant=\"h6\" sx={{ mb: 1, color: darkMode ? '#eee' : 'inherit' }}>Driving Directions</Typography>\r\n                                        <iframe\r\n                                            src={mapUrl} // Ensure this uses Embed API URL + your Key if using iframe\r\n                                            width=\"100%\"\r\n                                            height=\"400\" // Adjusted height slightly for modal\r\n                                            style={{ border: 0 }}\r\n                                            allowFullScreen=\"\"\r\n                                            loading=\"lazy\"\r\n                                            referrerPolicy=\"no-referrer-when-downgrade\"\r\n                                            title=\"Directions Map\"\r\n                                        ></iframe>\r\n                                    </div>\r\n                                ) : (\r\n                                    // Optional: show a loading indicator while mapUrl is being fetched\r\n                                    <Typography sx={{ color: darkMode ? '#aaa' : 'text.secondary' }}>Loading map...</Typography>\r\n                                )}\r\n                            </Collapse>\r\n                            {/* --- End Map Display Collapse Section --- */}\r\n\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={() => {\r\n                                setShowDetailsDialog(false);\r\n                                setShowMap(false); // Hide map when closing\r\n                                setMapUrl(''); // Clear map URL when closing\r\n                            }}>Close</Button>\r\n                        </DialogActions>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n            {/* --- End View Event Details Dialog --- */}\r\n\r\n\r\n            {/* --- Register for Event Dialog (Remains the same) --- */}\r\n            <Dialog\r\n                open={showRegisterDialog}\r\n                onClose={() => {\r\n                    setShowRegisterDialog(false);\r\n                    // Clear student info when closing dialog manually\r\n                    setStudentInfo({ firstName: '', middleName: '', lastName: '', studentID: '' });\r\n                }}\r\n                fullWidth\r\n                maxWidth=\"xs\" // Make register dialog slightly smaller maybe\r\n                PaperProps={{ sx: { backgroundColor: darkMode ? '#333' : '#fff', color: darkMode ? '#fff' : '#000' } }}\r\n            >\r\n                {selectedEvent && ( // Render only if an event is selected\r\n                    <>\r\n                        <DialogTitle sx={{ color: darkMode ? '#eee' : 'inherit', pb: 1 }}> {/* Reduced padding bottom */}\r\n                            Register for:\r\n                            <Typography variant=\"h6\" component=\"div\" sx={{ color: darkMode ? '#fff' : 'primary.main' }}>\r\n                                {selectedEvent.event_name}\r\n                            </Typography>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            {/* Student Info TextFields (copied from previous Collapse) */}\r\n                            <TextField label=\"First Name\" required fullWidth margin=\"normal\" value={studentInfo.firstName} onChange={e => setStudentInfo({ ...studentInfo, firstName: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }} />\r\n                            <TextField label=\"Middle Name\" fullWidth margin=\"normal\" value={studentInfo.middleName} onChange={e => setStudentInfo({ ...studentInfo, middleName: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }} />\r\n                            <TextField label=\"Last Name\" required fullWidth margin=\"normal\" value={studentInfo.lastName} onChange={e => setStudentInfo({ ...studentInfo, lastName: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }} />\r\n                            <TextField label=\"Student ID\" required fullWidth margin=\"normal\" value={studentInfo.studentID} onChange={e => setStudentInfo({ ...studentInfo, studentID: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }} />\r\n                        </DialogContent>\r\n                        <DialogActions sx={{ p: '16px 24px' }}> {/* Ensure padding */}\r\n                            <Button onClick={() => {\r\n                                setShowRegisterDialog(false);\r\n                                setStudentInfo({ firstName: '', middleName: '', lastName: '', studentID: '' }); // Clear info on cancel\r\n                            }} color=\"error\">Cancel</Button>\r\n                            <Button onClick={handleRegister} color=\"primary\" variant=\"contained\">Submit Registration</Button>\r\n                        </DialogActions>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n            {/* --- End Register for Event Dialog --- */}\r\n\r\n\r\n            {/* --- Add Event Dialog (Remains the same) --- */}\r\n            <Dialog open={showAddDialog} onClose={() => setShowAddDialog(false)} fullWidth maxWidth=\"sm\" PaperProps={{ sx: { backgroundColor: darkMode ? '#333' : '#fff', color: darkMode ? '#fff' : '#000' } }}>\r\n                <DialogTitle sx={{ color: darkMode ? '#eee' : 'inherit' }}>Add a New Event</DialogTitle>\r\n                <DialogContent>\r\n                    {/* Add dark mode styling to Dialog TextFields */}\r\n                    <TextField label=\"Event Name\" required fullWidth margin=\"normal\" value={newEvent.event_name} onChange={e => setNewEvent({ ...newEvent, event_name: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                    <TextField label=\"Abstract\" fullWidth margin=\"normal\" multiline rows={3} value={newEvent.abstract} onChange={e => setNewEvent({ ...newEvent, abstract: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                    <TextField label=\"Event Date\" required type=\"date\" InputLabelProps={{ shrink: true, style: { color: darkMode ? '#aaa' : undefined } }} fullWidth margin=\"normal\" value={newEvent.event_date} onChange={e => setNewEvent({ ...newEvent, event_date: e.target.value })} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                    <TextField label=\"Location\" required fullWidth margin=\"normal\" value={newEvent.location} onChange={e => setNewEvent({ ...newEvent, location: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                    <TextField label=\"Cost (Enter 0 if free)\" type=\"number\" fullWidth margin=\"normal\" value={newEvent.cost} onChange={e => setNewEvent({ ...newEvent, cost: e.target.value })} InputLabelProps={{ style: { color: darkMode ? '#aaa' : undefined } }} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                    <TextField label=\"Start Time\" required type=\"time\" InputLabelProps={{ shrink: true, style: { color: darkMode ? '#aaa' : undefined } }} fullWidth margin=\"normal\" value={newEvent.time_from} onChange={e => setNewEvent({ ...newEvent, time_from: e.target.value })} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                    <TextField label=\"End Time\" required type=\"time\" InputLabelProps={{ shrink: true, style: { color: darkMode ? '#aaa' : undefined } }} fullWidth margin=\"normal\" value={newEvent.time_to} onChange={e => setNewEvent({ ...newEvent, time_to: e.target.value })} inputProps={{ style: { color: darkMode ? '#fff' : undefined } }} sx={{ '& .MuiOutlinedInput-root': { '& fieldset': { borderColor: darkMode ? '#555' : 'rgba(0, 0, 0, 0.23)' } } }}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowAddDialog(false)} color=\"error\">Cancel</Button>\r\n                    <Button onClick={handleAddEvent} color=\"primary\">Add Event</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* --- Snackbar for Notifications --- */}\r\n            <Snackbar\r\n                open={snackbar.open}\r\n                autoHideDuration={snackbar.severity === 'info' ? 2000 : 4000} // Shorter for info messages\r\n                onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            >\r\n                {/* Severity needs to be correctly passed to Alert */}\r\n                <Alert\r\n                    severity={snackbar.severity || 'info'} // Default to info if severity is missing\r\n                    sx={{ width: '100%' }}\r\n                    onClose={() => setSnackbar({ ...snackbar, open: false })} // Allow closing via X icon\r\n                >\r\n                    {snackbar.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {/* --- Floating Action Button to Add Event --- */}\r\n            <Fab\r\n                color=\"primary\"\r\n                aria-label=\"add new event\"\r\n                sx={{ position: 'fixed', bottom: 30, right: 30 }} // Adjusted positioning slightly\r\n                onClick={() => setShowAddDialog(true)}\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}