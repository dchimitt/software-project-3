{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayp9\\\\WebstormProjects\\\\student-life-webapp\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl, Card, CardContent, CardActions, Typography, Grid, Snackbar, Alert, IconButton, AppBar, Toolbar, Switch, Collapse, Dialog, DialogTitle, DialogContent, DialogActions, Fab, List, ListItem, ListItemText, ListItemSecondaryAction, Divider } from '@mui/material';\nimport { DirectionsCar, EventAvailable, AddCircle, Map, Brightness4, Brightness7 } from '@mui/icons-material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEventId, setSelectedEventId] = useState('');\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [mapUrl, setMapUrl] = useState('');\n  const [parkingSuggestion, setParkingSuggestion] = useState('');\n  const [destination, setDestination] = useState('Purdue University Northwest');\n  const [registeredEvents, setRegisteredEvents] = useState([]);\n  const [selectedRegisteredEvent, setSelectedRegisteredEvent] = useState('');\n  const [searchStudentID, setSearchStudentID] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const filteredEvents = events.filter(event => event.event_name.toLowerCase().includes(searchQuery.toLowerCase()));\n  const [showAddDialog, setShowAddDialog] = useState(false);\n  const [showMap, setShowMap] = useState(false); // <-- Add this state variable\n\n  const [studentInfo, setStudentInfo] = useState({\n    firstName: '',\n    middleName: '',\n    lastName: '',\n    studentID: ''\n  });\n  const [newEvent, setNewEvent] = useState({\n    event_name: '',\n    abstract: '',\n    event_date: '',\n    location: '',\n    cost: '',\n    time_from: '',\n    time_to: ''\n  });\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = () => {\n    axios.get('http://localhost:5000/events').then(response => setEvents(response.data)).catch(error => console.error('Error fetching events', error));\n  };\n  const fetchRegisteredEvents = () => {\n    if (!searchStudentID) {\n      alert('Please enter your Student ID first.');\n      return;\n    }\n    axios.get(`http://localhost:5000/my-registrations/${searchStudentID}`).then(response => {\n      setRegisteredEvents(response.data);\n      if (response.data.length > 0) {\n        setSelectedRegisteredEvent(response.data[0].id.toString());\n      }\n    }).catch(error => console.error('Error fetching registered events', error));\n  };\n  const handleRegister = () => {\n    if (!selectedEventId) {\n      alert('Please select an event.');\n      return;\n    }\n    axios.post('http://localhost:5000/register', {\n      ...studentInfo,\n      eventID: selectedEventId\n    }).then(response => {\n      setSnackbar({\n        open: true,\n        message: response.data.message,\n        severity: 'success'\n      });\n      setStudentInfo({\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        studentID: ''\n      });\n      setSelectedEventId('');\n      setSelectedEvent(null);\n    }).catch(error => {\n      console.error('Error registering student', error);\n      setSnackbar({\n        open: true,\n        message: 'Registration failed',\n        severity: 'error'\n      });\n    });\n  };\n  const handleAddEvent = () => {\n    axios.post('http://localhost:5000/add-event', newEvent).then(response => {\n      setSnackbar({\n        open: true,\n        message: response.data.message,\n        severity: 'success'\n      });\n      setNewEvent({\n        event_name: '',\n        abstract: '',\n        event_date: '',\n        location: '',\n        cost: '',\n        time_from: '',\n        time_to: ''\n      });\n      fetchEvents();\n    }).catch(error => {\n      console.error('Error adding event', error);\n      setSnackbar({\n        open: true,\n        message: 'Adding event failed',\n        severity: 'error'\n      });\n    });\n  };\n  const handleEventSelect = e => {\n    const selectedId = e.target.value;\n    setSelectedEventId(selectedId);\n    const event = events.find(ev => ev.id.toString() === selectedId);\n    setSelectedEvent(event);\n    if (event) {\n      setDestination(event.location || 'Purdue University Northwest');\n      const lowerLocation = (event.location || '').toLowerCase();\n      if (lowerLocation.includes('hammond')) {\n        setParkingSuggestion('Use Hammond Campus Parking Garage');\n      } else if (lowerLocation.includes('westville')) {\n        setParkingSuggestion('Use Westville Lot 6');\n      } else {\n        setParkingSuggestion('General PNW Parking Area');\n      }\n    }\n  };\n  const handleGetDirections = eventLocation => {\n    const dest = eventLocation || 'Purdue University Northwest, Hammond, IN'; // Use a more specific default\n\n    if (!navigator.geolocation) {\n      setSnackbar({\n        open: true,\n        message: 'Geolocation is not supported by your browser.',\n        severity: 'warning'\n      });\n      return;\n    }\n\n    // Show loading indicator maybe?\n    setSnackbar({\n      open: true,\n      message: 'Getting your location...',\n      severity: 'info'\n    });\n    setShowMap(false); // Hide previous map while loading new one\n\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const origin = `${latitude},${longitude}`;\n\n      // Use Google Maps Directions URL format\n      const googleMapsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${encodeURIComponent(dest)}&travelmode=driving`;\n\n      // Set the URL for an iframe OR consider opening in a new tab\n      // Using an iframe: Less flexible but keeps user on page\n      setMapUrl(`https://www.google.com/maps/embed/v1/directions?key=&origin=${origin}&destination=${encodeURIComponent(dest)}&mode=driving`); // <-- NEED TO USE EMBED API URL and an API Key for iframe\n\n      // --- OR ---\n      // Option B: Open in new tab (Often better UX for maps)\n      // window.open(googleMapsUrl, '_blank');\n      // setMapUrl(''); // Don't use iframe if opening in new tab\n      // setShowMap(false);\n\n      // If using iframe:\n      setShowMap(true); // Show the map section\n      setSnackbar({\n        open: true,\n        message: 'Directions loaded below.',\n        severity: 'success'\n      });\n    }, error => {\n      console.error('Error getting location:', error);\n      let message = 'Unable to retrieve your location. Please ensure location services are enabled.';\n      if (error.code === 1) {\n        // PERMISSION_DENIED\n        message = 'Location permission denied. Please enable it in your browser settings.';\n      }\n      setSnackbar({\n        open: true,\n        message: message,\n        severity: 'error'\n      });\n      setShowMap(false);\n    });\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const toggleTheme = () => setDarkMode(!darkMode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30,\n      backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n      minHeight: '100vh',\n      color: darkMode ? '#ffffff' : '#000000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: darkMode ? 'default' : 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"PNW Student Life Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: toggleTheme,\n          children: darkMode ? /*#__PURE__*/_jsxDEV(Brightness7, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness4, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      marginTop: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search events\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          sx: {\n            mb: 2\n          }\n          // Add styling for dark mode if needed, e.g., InputProps, sx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: filteredEvents.length > 0 ? filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                backgroundColor: darkMode ? '#333' : '#fff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  flexGrow: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: event.event_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(EventAvailable, {\n                    sx: {\n                      mr: 1,\n                      fontSize: '1.1rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 49\n                  }, this), formatDate(event.event_date)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(EventAvailable, {\n                    sx: {\n                      mr: 1,\n                      fontSize: '1.1rem',\n                      opacity: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 49\n                  }, this), \" \", event.time_from && new Date(`1970-01-01T${event.time_from}`).toLocaleTimeString([], {\n                    hour: 'numeric',\n                    minute: '2-digit',\n                    hour12: true\n                  }), event.time_to && ` to ${new Date(`1970-01-01T${event.time_to}`).toLocaleTimeString([], {\n                    hour: 'numeric',\n                    minute: '2-digit',\n                    hour12: true\n                  })}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Map, {\n                    sx: {\n                      mr: 1,\n                      fontSize: '1.1rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 49\n                  }, this), \" \", event.location || 'Location TBD']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                sx: {\n                  justifyContent: 'flex-end',\n                  pr: 2,\n                  pb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => {\n                    // Keep existing logic: select event, trigger collapse\n                    setSelectedEventId(event.id.toString());\n                    setSelectedEvent(event);\n                    // Auto-fill Student ID if previously entered for registered events? (Optional enhancement)\n                    // setStudentInfo({ ...studentInfo, studentID: searchStudentID });\n                  },\n                  children: \"View Details / Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                textAlign: 'center',\n                mt: 3\n              },\n              children: \"No events match your search.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: !!selectedEvent,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: selectedEvent && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: [/*#__PURE__*/_jsxDEV(AddCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 62\n                }, this), \" Register for an Event\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Select Event\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedEventId,\n                  onChange: handleEventSelect,\n                  label: \"Select Event\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"Select Event\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 45\n                  }, this), events.map(event => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: event.id,\n                    children: event.event_name\n                  }, event.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"First Name\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: studentInfo.firstName,\n                onChange: e => setStudentInfo({\n                  ...studentInfo,\n                  firstName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Middle Name\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: studentInfo.middleName,\n                onChange: e => setStudentInfo({\n                  ...studentInfo,\n                  middleName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Last Name\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: studentInfo.lastName,\n                onChange: e => setStudentInfo({\n                  ...studentInfo,\n                  lastName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Student ID\",\n                fullWidth: true,\n                margin: \"normal\",\n                value: studentInfo.studentID,\n                onChange: e => setStudentInfo({\n                  ...studentInfo,\n                  studentID: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: \"contained\",\n                onClick: handleRegister,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: \"outlined\",\n                color: \"error\",\n                sx: {\n                  mt: 1\n                },\n                onClick: () => {\n                  setSelectedEvent(null);\n                  setSelectedEventId('');\n                  setStudentInfo({\n                    firstName: '',\n                    middleName: '',\n                    lastName: '',\n                    studentID: ''\n                  });\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this), parkingSuggestion && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                style: {\n                  marginTop: 10\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Suggested Parking Lot:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 45\n                }, this), \" \", parkingSuggestion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: darkMode ? '#333' : '#fff'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(DirectionsCar, {\n                sx: {\n                  mr: 1,\n                  verticalAlign: 'bottom'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 67\n              }, this), \" Your Registered Events\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Enter Your Student ID to View\",\n              fullWidth: true,\n              margin: \"normal\",\n              value: searchStudentID,\n              onChange: e => setSearchStudentID(e.target.value)\n              // Add styling for dark mode if needed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"outlined\",\n              onClick: fetchRegisteredEvents,\n              sx: {\n                mb: 2\n              },\n              children: \"Load My Registered Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), registeredEvents.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n              children: registeredEvents.map((event, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: event.event_name,\n                    secondary: `${formatDate(event.event_date)} at ${event.location || 'TBD'}`,\n                    primaryTypographyProps: {\n                      color: darkMode ? '#fff' : 'inherit'\n                    },\n                    secondaryTypographyProps: {\n                      color: darkMode ? '#ccc' : 'text.secondary'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      size: \"small\",\n                      startIcon: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 68\n                      }, this),\n                      onClick: () => handleGetDirections(event.location) // Pass location directly\n                      ,\n                      children: \"Get Directions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 45\n                }, this), index < registeredEvents.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 85\n                }, this)]\n              }, event.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this), registeredEvents.length === 0 && searchStudentID &&\n            /*#__PURE__*/\n            /* Consider adding a flag to know if search was attempted */\n            _jsxDEV(Typography, {\n              sx: {\n                textAlign: 'center',\n                mt: 2\n              },\n              children: \"No registered events found for this ID.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: showMap,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: mapUrl && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"Driving Directions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                src: mapUrl,\n                width: \"100%\",\n                height: \"450\",\n                style: {\n                  border: 0\n                },\n                allowFullScreen: \"\",\n                loading: \"lazy\",\n                title: \"Directions Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showAddDialog,\n      onClose: () => setShowAddDialog(false),\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add a New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Event Name\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.event_name,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            event_name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Abstract\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.abstract,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            abstract: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Event Date\",\n          type: \"date\",\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.event_date,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            event_date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Location\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.location,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Cost\",\n          type: \"number\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.cost,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            cost: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Time (e.g. 10:00 AM)\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.time_from,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            time_from: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Time (e.g. 2:00 PM)\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: newEvent.time_to,\n          onChange: e => setNewEvent({\n            ...newEvent,\n            time_to: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowAddDialog(false),\n          color: \"error\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddEvent,\n          color: \"primary\",\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 4000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      sx: {\n        position: 'fixed',\n        bottom: 20,\n        right: 20\n      },\n      onClick: () => setShowAddDialog(true),\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/s0AW/hJlxTq+6IPi8Qf++KFiwI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","MenuItem","Select","InputLabel","FormControl","Card","CardContent","CardActions","Typography","Grid","Snackbar","Alert","IconButton","AppBar","Toolbar","Switch","Collapse","Dialog","DialogTitle","DialogContent","DialogActions","Fab","List","ListItem","ListItemText","ListItemSecondaryAction","Divider","DirectionsCar","EventAvailable","AddCircle","Map","Brightness4","Brightness7","AddIcon","jsxDEV","_jsxDEV","App","_s","events","setEvents","selectedEventId","setSelectedEventId","selectedEvent","setSelectedEvent","mapUrl","setMapUrl","parkingSuggestion","setParkingSuggestion","destination","setDestination","registeredEvents","setRegisteredEvents","selectedRegisteredEvent","setSelectedRegisteredEvent","searchStudentID","setSearchStudentID","snackbar","setSnackbar","open","message","severity","darkMode","setDarkMode","searchQuery","setSearchQuery","filteredEvents","filter","event","event_name","toLowerCase","includes","showAddDialog","setShowAddDialog","showMap","setShowMap","studentInfo","setStudentInfo","firstName","middleName","lastName","studentID","newEvent","setNewEvent","abstract","event_date","location","cost","time_from","time_to","fetchEvents","get","then","response","data","catch","error","console","fetchRegisteredEvents","alert","length","id","toString","handleRegister","post","eventID","handleAddEvent","handleEventSelect","e","selectedId","target","value","find","ev","lowerLocation","handleGetDirections","eventLocation","dest","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","origin","googleMapsUrl","encodeURIComponent","code","formatDate","dateString","Date","toLocaleDateString","year","month","day","toggleTheme","style","padding","backgroundColor","minHeight","color","children","variant","sx","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","container","spacing","marginTop","item","xs","label","fullWidth","onChange","mb","map","sm","md","height","display","flexDirection","gutterBottom","alignItems","mr","fontSize","opacity","toLocaleTimeString","hour","minute","hour12","justifyContent","pr","pb","textAlign","mt","in","timeout","unmountOnExit","margin","verticalAlign","index","Fragment","primary","secondary","primaryTypographyProps","secondaryTypographyProps","size","startIcon","component","src","width","border","allowFullScreen","loading","title","onClose","maxWidth","type","InputLabelProps","shrink","autoHideDuration","bottom","right","_c","$RefreshReg$"],"sources":["C:/Users/jayp9/WebstormProjects/student-life-webapp/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Select, InputLabel, FormControl, Card, CardContent,CardActions, Typography, Grid, Snackbar, Alert, IconButton, AppBar, Toolbar, Switch, Collapse,Dialog, DialogTitle, DialogContent, DialogActions, Fab, List, ListItem, ListItemText, ListItemSecondaryAction, Divider } from '@mui/material';\r\nimport { DirectionsCar, EventAvailable, AddCircle, Map, Brightness4, Brightness7 } from '@mui/icons-material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n\r\nfunction App() {\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedEventId, setSelectedEventId] = useState('');\r\n    const [selectedEvent, setSelectedEvent] = useState(null);\r\n    const [mapUrl, setMapUrl] = useState('');\r\n    const [parkingSuggestion, setParkingSuggestion] = useState('');\r\n    const [destination, setDestination] = useState('Purdue University Northwest');\r\n    const [registeredEvents, setRegisteredEvents] = useState([]);\r\n    const [selectedRegisteredEvent, setSelectedRegisteredEvent] = useState('');\r\n    const [searchStudentID, setSearchStudentID] = useState('');\r\n    const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const filteredEvents = events.filter(event =>\r\n        event.event_name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    const [showAddDialog, setShowAddDialog] = useState(false);\r\n    const [showMap, setShowMap] = useState(false); // <-- Add this state variable\r\n\r\n\r\n\r\n    const [studentInfo, setStudentInfo] = useState({\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        studentID: ''\r\n    });\r\n\r\n    const [newEvent, setNewEvent] = useState({\r\n        event_name: '',\r\n        abstract: '',\r\n        event_date: '',\r\n        location: '',\r\n        cost: '',\r\n        time_from: '',\r\n        time_to: ''\r\n    });\r\n\r\n    useEffect(() => { fetchEvents(); }, []);\r\n\r\n    const fetchEvents = () => {\r\n        axios.get('http://localhost:5000/events')\r\n            .then(response => setEvents(response.data))\r\n            .catch(error => console.error('Error fetching events', error));\r\n    };\r\n\r\n    const fetchRegisteredEvents = () => {\r\n        if (!searchStudentID) {\r\n            alert('Please enter your Student ID first.');\r\n            return;\r\n        }\r\n\r\n        axios.get(`http://localhost:5000/my-registrations/${searchStudentID}`)\r\n            .then(response => {\r\n                setRegisteredEvents(response.data);\r\n                if (response.data.length > 0) {\r\n                    setSelectedRegisteredEvent(response.data[0].id.toString());\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching registered events', error));\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        if (!selectedEventId) {\r\n            alert('Please select an event.');\r\n            return;\r\n        }\r\n\r\n        axios.post('http://localhost:5000/register', { ...studentInfo, eventID: selectedEventId })\r\n            .then(response => {\r\n                setSnackbar({ open: true, message: response.data.message, severity: 'success' });\r\n                setStudentInfo({ firstName: '', middleName: '', lastName: '', studentID: '' });\r\n                setSelectedEventId('');\r\n                setSelectedEvent(null);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error registering student', error);\r\n                setSnackbar({ open: true, message: 'Registration failed', severity: 'error' });\r\n            });\r\n    };\r\n\r\n    const handleAddEvent = () => {\r\n        axios.post('http://localhost:5000/add-event', newEvent)\r\n            .then(response => {\r\n                setSnackbar({ open: true, message: response.data.message, severity: 'success' });\r\n                setNewEvent({ event_name: '', abstract: '', event_date: '', location: '', cost: '', time_from: '', time_to: '' });\r\n                fetchEvents();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error adding event', error);\r\n                setSnackbar({ open: true, message: 'Adding event failed', severity: 'error' });\r\n            });\r\n    };\r\n\r\n    const handleEventSelect = (e) => {\r\n        const selectedId = e.target.value;\r\n        setSelectedEventId(selectedId);\r\n        const event = events.find(ev => ev.id.toString() === selectedId);\r\n        setSelectedEvent(event);\r\n\r\n        if (event) {\r\n            setDestination(event.location || 'Purdue University Northwest');\r\n            const lowerLocation = (event.location || '').toLowerCase();\r\n            if (lowerLocation.includes('hammond')) {\r\n                setParkingSuggestion('Use Hammond Campus Parking Garage');\r\n            } else if (lowerLocation.includes('westville')) {\r\n                setParkingSuggestion('Use Westville Lot 6');\r\n            } else {\r\n                setParkingSuggestion('General PNW Parking Area');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleGetDirections = (eventLocation) => {\r\n        const dest = eventLocation || 'Purdue University Northwest, Hammond, IN'; // Use a more specific default\r\n\r\n        if (!navigator.geolocation) {\r\n            setSnackbar({ open: true, message: 'Geolocation is not supported by your browser.', severity: 'warning' });\r\n            return;\r\n        }\r\n\r\n        // Show loading indicator maybe?\r\n        setSnackbar({ open: true, message: 'Getting your location...', severity: 'info' });\r\n        setShowMap(false); // Hide previous map while loading new one\r\n\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                const origin = `${latitude},${longitude}`;\r\n\r\n                // Use Google Maps Directions URL format\r\n                const googleMapsUrl = `https://www.google.com/maps/dir/?api=1&origin=${origin}&destination=${encodeURIComponent(dest)}&travelmode=driving`;\r\n\r\n                // Set the URL for an iframe OR consider opening in a new tab\r\n                // Using an iframe: Less flexible but keeps user on page\r\n                setMapUrl(`https://www.google.com/maps/embed/v1/directions?key=&origin=${origin}&destination=${encodeURIComponent(dest)}&mode=driving`); // <-- NEED TO USE EMBED API URL and an API Key for iframe\r\n\r\n                // --- OR ---\r\n                // Option B: Open in new tab (Often better UX for maps)\r\n                // window.open(googleMapsUrl, '_blank');\r\n                // setMapUrl(''); // Don't use iframe if opening in new tab\r\n                // setShowMap(false);\r\n\r\n                // If using iframe:\r\n                setShowMap(true); // Show the map section\r\n                setSnackbar({ open: true, message: 'Directions loaded below.', severity: 'success' });\r\n\r\n\r\n            },\r\n            (error) => {\r\n                console.error('Error getting location:', error);\r\n                let message = 'Unable to retrieve your location. Please ensure location services are enabled.';\r\n                if (error.code === 1) { // PERMISSION_DENIED\r\n                    message = 'Location permission denied. Please enable it in your browser settings.';\r\n                }\r\n                setSnackbar({ open: true, message: message, severity: 'error' });\r\n                setShowMap(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n        return new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\n    };\r\n\r\n    const toggleTheme = () => setDarkMode(!darkMode);\r\n\r\n    return (\r\n        <div style={{ padding: 30, backgroundColor: darkMode ? '#121212' : '#f5f5f5', minHeight: '100vh', color: darkMode ? '#ffffff' : '#000000' }}>\r\n            <AppBar position=\"static\" color={darkMode ? 'default' : 'primary'}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>PNW Student Life Portal</Typography>\r\n                    <IconButton color=\"inherit\" onClick={toggleTheme}>\r\n                        {darkMode ? <Brightness7 /> : <Brightness4 />}\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Grid container spacing={4} marginTop={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        label=\"Search events\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        sx={{ mb: 2 }}\r\n                        // Add styling for dark mode if needed, e.g., InputProps, sx\r\n                    />\r\n                    <Grid container spacing={3}>\r\n                        {filteredEvents.length > 0 ? (\r\n                            filteredEvents.map((event) => (\r\n                                <Grid item xs={12} sm={6} md={4} key={event.id}>\r\n                                    <Card variant=\"outlined\" sx={{ height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: darkMode ? '#333' : '#fff' }}>\r\n                                        <CardContent sx={{ flexGrow: 1 }}>\r\n                                            <Typography variant=\"h6\" gutterBottom>{event.event_name}</Typography>\r\n                                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                                                <EventAvailable sx={{ mr: 1, fontSize: '1.1rem' }} />\r\n                                                {formatDate(event.event_date)}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                                                {/* Basic time formatting, assumes valid time strings */}\r\n                                                <EventAvailable sx={{ mr: 1, fontSize: '1.1rem', opacity: 0 }} /> {/* Placeholder for alignment */}\r\n                                                {event.time_from && new Date(`1970-01-01T${event.time_from}`).toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true })}\r\n                                                {event.time_to && ` to ${new Date(`1970-01-01T${event.time_to}`).toLocaleTimeString([], { hour: 'numeric', minute: '2-digit', hour12: true })}`}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                                <Map sx={{ mr: 1, fontSize: '1.1rem' }} /> {event.location || 'Location TBD'}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions sx={{ justifyContent: 'flex-end', pr: 2, pb: 2 }}>\r\n                                            {/* This button now just selects the event to show the registration form */}\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => {\r\n                                                    // Keep existing logic: select event, trigger collapse\r\n                                                    setSelectedEventId(event.id.toString());\r\n                                                    setSelectedEvent(event);\r\n                                                    // Auto-fill Student ID if previously entered for registered events? (Optional enhancement)\r\n                                                    // setStudentInfo({ ...studentInfo, studentID: searchStudentID });\r\n                                                }}\r\n                                            >\r\n                                                View Details / Register\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </Grid>\r\n                            ))\r\n                        ) : (\r\n                            <Grid item xs={12}>\r\n                                <Typography sx={{ textAlign: 'center', mt: 3 }}>No events match your search.</Typography>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Collapse in={!!selectedEvent} timeout=\"auto\" unmountOnExit>\r\n                    {selectedEvent && (\r\n                        <Grid item xs={12} md={6}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\"><AddCircle /> Register for an Event</Typography>\r\n                                    <FormControl fullWidth margin=\"normal\">\r\n                                        <InputLabel>Select Event</InputLabel>\r\n                                        <Select value={selectedEventId} onChange={handleEventSelect} label=\"Select Event\">\r\n                                            <MenuItem value=\"\">Select Event</MenuItem>\r\n                                            {events.map(event => (\r\n                                                <MenuItem key={event.id} value={event.id}>{event.event_name}</MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <TextField\r\n                                        label=\"First Name\"\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        value={studentInfo.firstName}\r\n                                        onChange={e => setStudentInfo({ ...studentInfo, firstName: e.target.value })}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Middle Name\"\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        value={studentInfo.middleName}\r\n                                        onChange={e => setStudentInfo({ ...studentInfo, middleName: e.target.value })}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Last Name\"\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        value={studentInfo.lastName}\r\n                                        onChange={e => setStudentInfo({ ...studentInfo, lastName: e.target.value })}\r\n                                    />\r\n                                    <TextField\r\n                                        label=\"Student ID\"\r\n                                        fullWidth\r\n                                        margin=\"normal\"\r\n                                        value={studentInfo.studentID}\r\n                                        onChange={e => setStudentInfo({ ...studentInfo, studentID: e.target.value })}\r\n                                    />\r\n                                    <Button fullWidth variant=\"contained\" onClick={handleRegister}>Register</Button>\r\n                                    <Button\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        color=\"error\"\r\n                                        sx={{ mt: 1 }}\r\n                                        onClick={() => {\r\n                                            setSelectedEvent(null);\r\n                                            setSelectedEventId('');\r\n                                            setStudentInfo({ firstName: '', middleName: '', lastName: '', studentID: '' });\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    {parkingSuggestion && (\r\n                                        <Typography variant=\"body2\" style={{ marginTop: 10 }}>\r\n                                            <strong>Suggested Parking Lot:</strong> {parkingSuggestion}\r\n                                        </Typography>\r\n                                    )}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    )}\r\n                </Collapse>\r\n\r\n\r\n                {/*<Grid item xs={12} md={6}>*/}\r\n                {/*    <Card>*/}\r\n                {/*        <CardContent>*/}\r\n                {/*            <Typography variant=\"h5\">Add a New Event</Typography>*/}\r\n                {/*            <TextField label=\"Event Name\" fullWidth margin=\"normal\" value={newEvent.event_name} onChange={e => setNewEvent({ ...newEvent, event_name: e.target.value })} />*/}\r\n                {/*            <TextField label=\"Abstract\" fullWidth margin=\"normal\" value={newEvent.abstract} onChange={e => setNewEvent({ ...newEvent, abstract: e.target.value })} />*/}\r\n                {/*            <TextField label=\"Event Date\" type=\"date\" InputLabelProps={{ shrink: true }} fullWidth margin=\"normal\" value={newEvent.event_date} onChange={e => setNewEvent({ ...newEvent, event_date: e.target.value })} />*/}\r\n                {/*            <TextField label=\"Location\" fullWidth margin=\"normal\" value={newEvent.location} onChange={e => setNewEvent({ ...newEvent, location: e.target.value })} />*/}\r\n                {/*            <TextField label=\"Cost\" type=\"number\" fullWidth margin=\"normal\" value={newEvent.cost} onChange={e => setNewEvent({ ...newEvent, cost: e.target.value })} />*/}\r\n                {/*            <TextField label=\"Start Time (e.g. 10:00 AM)\" fullWidth margin=\"normal\" value={newEvent.time_from} onChange={e => setNewEvent({ ...newEvent, time_from: e.target.value })} />*/}\r\n                {/*            <TextField label=\"End Time (e.g. 2:00 PM)\" fullWidth margin=\"normal\" value={newEvent.time_to} onChange={e => setNewEvent({ ...newEvent, time_to: e.target.value })} />*/}\r\n                {/*            <Button fullWidth variant=\"contained\" color=\"success\" onClick={handleAddEvent}>Add Event</Button>*/}\r\n                {/*        </CardContent>*/}\r\n                {/*    </Card>*/}\r\n                {/*</Grid>*/}\r\n\r\n                <Grid item xs={12}>\r\n                    <Card sx={{ backgroundColor: darkMode ? '#333' : '#fff' }}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" gutterBottom><DirectionsCar sx={{ mr: 1, verticalAlign: 'bottom' }} /> Your Registered Events</Typography>\r\n                            <TextField\r\n                                label=\"Enter Your Student ID to View\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                value={searchStudentID}\r\n                                onChange={e => setSearchStudentID(e.target.value)}\r\n                                // Add styling for dark mode if needed\r\n                            />\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                onClick={fetchRegisteredEvents}\r\n                                sx={{ mb: 2 }}\r\n                            >\r\n                                Load My Registered Events\r\n                            </Button>\r\n\r\n                            {/* Display registered events as a list */}\r\n                            {registeredEvents.length > 0 && (\r\n                                <List>\r\n                                    {registeredEvents.map((event, index) => (\r\n                                        <React.Fragment key={event.id}>\r\n                                            <ListItem>\r\n                                                <ListItemText\r\n                                                    primary={event.event_name}\r\n                                                    secondary={`${formatDate(event.event_date)} at ${event.location || 'TBD'}`}\r\n                                                    primaryTypographyProps={{ color: darkMode ? '#fff' : 'inherit' }}\r\n                                                    secondaryTypographyProps={{ color: darkMode ? '#ccc' : 'text.secondary' }}\r\n                                                />\r\n                                                <ListItemSecondaryAction>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"secondary\"\r\n                                                        size=\"small\"\r\n                                                        startIcon={<Map />}\r\n                                                        onClick={() => handleGetDirections(event.location)} // Pass location directly\r\n                                                    >\r\n                                                        Get Directions\r\n                                                    </Button>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            {/* Add a divider between items, but not after the last one */}\r\n                                            {index < registeredEvents.length - 1 && <Divider component=\"li\" />}\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </List>\r\n                            )}\r\n                            {/* Message if no events found after loading */}\r\n                            {registeredEvents.length === 0 && searchStudentID && ( /* Consider adding a flag to know if search was attempted */\r\n                                <Typography sx={{ textAlign: 'center', mt: 2 }}>No registered events found for this ID.</Typography>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Collapse in={showMap} timeout=\"auto\" unmountOnExit>\r\n                    {mapUrl && (\r\n                        <Grid item xs={12}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\">Driving Directions</Typography>\r\n                                    <iframe\r\n                                        src={mapUrl}\r\n                                        width=\"100%\"\r\n                                        height=\"450\"\r\n                                        style={{ border: 0 }}\r\n                                        allowFullScreen=\"\"\r\n                                        loading=\"lazy\"\r\n                                        title=\"Directions Map\"\r\n                                    ></iframe>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    )}\r\n                </Collapse>\r\n            </Grid>\r\n\r\n            <Dialog open={showAddDialog} onClose={() => setShowAddDialog(false)} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle>Add a New Event</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField label=\"Event Name\" fullWidth margin=\"normal\" value={newEvent.event_name} onChange={e => setNewEvent({ ...newEvent, event_name: e.target.value })} />\r\n                    <TextField label=\"Abstract\" fullWidth margin=\"normal\" value={newEvent.abstract} onChange={e => setNewEvent({ ...newEvent, abstract: e.target.value })} />\r\n                    <TextField label=\"Event Date\" type=\"date\" InputLabelProps={{ shrink: true }} fullWidth margin=\"normal\" value={newEvent.event_date} onChange={e => setNewEvent({ ...newEvent, event_date: e.target.value })} />\r\n                    <TextField label=\"Location\" fullWidth margin=\"normal\" value={newEvent.location} onChange={e => setNewEvent({ ...newEvent, location: e.target.value })} />\r\n                    <TextField label=\"Cost\" type=\"number\" fullWidth margin=\"normal\" value={newEvent.cost} onChange={e => setNewEvent({ ...newEvent, cost: e.target.value })} />\r\n                    <TextField label=\"Start Time (e.g. 10:00 AM)\" fullWidth margin=\"normal\" value={newEvent.time_from} onChange={e => setNewEvent({ ...newEvent, time_from: e.target.value })} />\r\n                    <TextField label=\"End Time (e.g. 2:00 PM)\" fullWidth margin=\"normal\" value={newEvent.time_to} onChange={e => setNewEvent({ ...newEvent, time_to: e.target.value })} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowAddDialog(false)} color=\"error\">Cancel</Button>\r\n                    <Button onClick={handleAddEvent} color=\"primary\">Add Event</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Snackbar open={snackbar.open} autoHideDuration={4000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\r\n                <Alert severity={snackbar.severity} sx={{ width: '100%' }}>{snackbar.message}</Alert>\r\n            </Snackbar>\r\n\r\n            <Fab\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                sx={{ position: 'fixed', bottom: 20, right: 20 }}\r\n                onClick={() => setShowAddDialog(true)}\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}